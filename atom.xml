<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>开发随记</title>
  
  <subtitle>记录工作、生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tongfangyuan.github.io/"/>
  <updated>2018-12-06T06:16:23.395Z</updated>
  <id>https://tongfangyuan.github.io/</id>
  
  <author>
    <name>Tong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EAN码知识及校验位的计算</title>
    <link href="https://tongfangyuan.github.io/2018/12/05/EAN%E7%A0%81%E7%9F%A5%E8%AF%86%E5%8F%8A%E6%A0%A1%E9%AA%8C%E4%BD%8D%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <id>https://tongfangyuan.github.io/2018/12/05/EAN码知识及校验位的计算/</id>
    <published>2018-12-05T06:06:51.000Z</published>
    <updated>2018-12-06T06:16:23.395Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>国际商品编码（International Article Number），即欧洲商品编码（European Article Number, EAN），原来只是欧洲范围内商品，而现在已是全球范围内产品交易的商品代码。为了适应读码器辨认的需要，这些代码又被做成大家熟知的条形码。EAN码又分EAN-13码和EAN-8码，EAN-13码是为普通商品设置，而EAN-8是专门为小商品设置的。</p></blockquote><a id="more"></a><blockquote><h4 id="EAN码组成及意义"><a href="#EAN码组成及意义" class="headerlink" title="EAN码组成及意义"></a>EAN码组成及意义</h4></blockquote><p>国家代码和生产商代码由EAN各国总部具体发放和管理，货品代码由由厂商自行设定。</p><blockquote><h5 id="EAN-13码"><a href="#EAN-13码" class="headerlink" title="EAN-13码"></a>EAN-13码</h5></blockquote><ul><li>国家代码（前3位）</li><li>生产商代码（后4位）</li><li>货品代码（再5位）</li><li>计算机校验码（最后1位）</li></ul><blockquote><h5 id="EAN-8码"><a href="#EAN-8码" class="headerlink" title="EAN-8码"></a>EAN-8码</h5></blockquote><ul><li>国家代码（前3位）</li><li>生产商代码（后2位）</li><li>货品代码（再2位）</li><li>计算机校验码（最后1位）</li></ul><blockquote><h4 id="EAN-13码校验位计算"><a href="#EAN-13码校验位计算" class="headerlink" title="EAN-13码校验位计算"></a>EAN-13码校验位计算</h4></blockquote><ol><li>取前<strong>12</strong>位码</li><li>求奇数位和<strong>A</strong></li><li>求欧数为和并取<strong>3倍</strong>值得到<strong>B</strong></li><li>求<strong>A</strong>、<strong>B</strong>的和取个位数<strong>C</strong>，用<strong>10</strong>减<strong>C</strong>得到的值<strong>D</strong>就是<strong>校验位</strong></li></ol><blockquote><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5></blockquote><ol><li>假设某国际商品编码的前 12 位是：<strong><code>490-8569-21968</code></strong></li><li><code>A = (4+0+5+9+1+6)=25</code></li><li><code>B = (9+8+6+2+9+8)*3 = 126</code></li><li><code>C = (25+126) % 10 = 1; D = 10 - 1 = 9;</code></li><li>完整的国际商品编码为 <code>490-8569-21968-9</code></li></ol><blockquote><h5 id="OC代码"><a href="#OC代码" class="headerlink" title="OC代码"></a>OC代码</h5></blockquote><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">int</span>)getStandardUPCEANCheckNum:(<span class="built_in">NSString</span> *)s &#123;</span><br><span class="line">    <span class="keyword">int</span> length = (<span class="keyword">int</span>)[s length];</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> digit = (<span class="keyword">int</span>)[s characterAtIndex:i] - (<span class="keyword">int</span>)<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (digit &lt; <span class="number">0</span> || digit &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            <span class="keyword">@throw</span> [<span class="built_in">NSException</span> exceptionWithName:<span class="string">@"error"</span> reason:<span class="string">@"字符应该为数字"</span> userInfo:<span class="literal">nil</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        sum += digit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum *= <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i -= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> digit = (<span class="keyword">int</span>)[s characterAtIndex:i] - (<span class="keyword">int</span>)<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (digit &lt; <span class="number">0</span> || digit &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            <span class="keyword">@throw</span> [<span class="built_in">NSException</span> exceptionWithName:<span class="string">@"error"</span> reason:<span class="string">@"字符应该为数字"</span> userInfo:<span class="literal">nil</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        sum += digit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1000</span> - sum) % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="EAN-8码校验位计算"><a href="#EAN-8码校验位计算" class="headerlink" title="EAN-8码校验位计算"></a>EAN-8码校验位计算</h4></blockquote><p>在前面补<code>00000</code>，按照EAN-13码方式计算</p><blockquote><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4></blockquote><ul><li><a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%B4%B2%E5%95%86%E5%93%81%E7%BC%96%E7%A0%81" target="_blank" rel="noopener">欧洲商品编码</a></li><li><a href="http://yy2000sh.blog.163.com/blog/static/60445413201110219491304/" target="_blank" rel="noopener">EAN8和EAN13标准条形码校验位算法  </a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;国际商品编码（International Article Number），即欧洲商品编码（European Article Number, EAN），原来只是欧洲范围内商品，而现在已是全球范围内产品交易的商品代码。为了适应读码器辨认的需要，这些代码又被做成大家熟知的条形码。EAN码又分EAN-13码和EAN-8码，EAN-13码是为普通商品设置，而EAN-8是专门为小商品设置的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="条形码" scheme="https://tongfangyuan.github.io/tags/%E6%9D%A1%E5%BD%A2%E7%A0%81/"/>
    
      <category term="EAN-13" scheme="https://tongfangyuan.github.io/tags/EAN-13/"/>
    
      <category term="EAN-8" scheme="https://tongfangyuan.github.io/tags/EAN-8/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的播放器实现</title>
    <link href="https://tongfangyuan.github.io/2018/11/29/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%92%AD%E6%94%BE%E5%99%A8%E5%AE%9E%E7%8E%B0/"/>
    <id>https://tongfangyuan.github.io/2018/11/29/一个简单的播放器实现/</id>
    <published>2018-11-29T07:00:27.000Z</published>
    <updated>2018-12-04T06:14:52.904Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近有个简单播放器的需求需要实现，公司其他项目本身已有播放器实现但是业务逻辑不满足现有需求，所以参照原有模块并结合相关资料自己实现了一个简单播放器，该播放器是基于<code>AVPlayer</code>实现的。</p></blockquote><a id="more"></a><h4 id="播放器功能介绍"><a href="#播放器功能介绍" class="headerlink" title="播放器功能介绍"></a>播放器功能介绍</h4><ul><li>单例实现</li><li>播放、暂停、切歌、缓冲处理、播放进度实时更新</li><li>后台持续播放</li><li>音频中断处理</li></ul><h4 id="协议代理"><a href="#协议代理" class="headerlink" title="协议代理"></a>协议代理</h4><h5 id="播放器功能协议TTPlayerProtocol"><a href="#播放器功能协议TTPlayerProtocol" class="headerlink" title="播放器功能协议TTPlayerProtocol"></a>播放器功能协议<code>TTPlayerProtocol</code></h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">TTPlayerProtocol</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) playMusicWithInfo:(<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;)model;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) enterPlayQueueWithSingle:(<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;)model;</span><br><span class="line">- (<span class="keyword">void</span>) enterPlayQueueWithArray:(<span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;&gt; *)models;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) replaceAllQueueWithSingle:(<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;)model;</span><br><span class="line">- (<span class="keyword">void</span>) replaceAllQueueWithArray:(<span class="built_in">NSArray</span>&lt;<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;&gt; *)models;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>) isPlaying;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>) isNextExist;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>) isPreExist;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) next;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) pre;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) pause;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) stop;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) play;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>) continuePlay;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">double</span>) currentSecs;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">double</span>) durationSecs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h5 id="播放器状态代理TTAudioPlayerStatusDelegate"><a href="#播放器状态代理TTAudioPlayerStatusDelegate" class="headerlink" title="播放器状态代理TTAudioPlayerStatusDelegate"></a>播放器状态代理<code>TTAudioPlayerStatusDelegate</code></h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">TTAudioPlayerStatusDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerPlayStart;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerPlayFinished;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerPause;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerStoped;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerPlayError:(<span class="built_in">NSError</span> *)error;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerSeekPosition:(<span class="keyword">double</span>)progress;</span><br><span class="line">- (<span class="keyword">void</span>)ttAudioPlayerUpdateProgress:(<span class="keyword">double</span>)progress;</span><br><span class="line">- (<span class="keyword">void</span>)ttAduioPlayerMusicInfoUpdate:(<span class="keyword">id</span>&lt;TTMusicModelProtocol&gt;)musicInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h5 id="数据模型协议-TTMusicModelProtocol"><a href="#数据模型协议-TTMusicModelProtocol" class="headerlink" title="数据模型协议 TTMusicModelProtocol"></a>数据模型协议 <code>TTMusicModelProtocol</code></h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">TTMusicModelProtocol</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@required</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *url;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *cover;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *author;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *album;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h4 id="类介绍"><a href="#类介绍" class="headerlink" title="类介绍"></a>类介绍</h4><h5 id="TTAudioPlayer"><a href="#TTAudioPlayer" class="headerlink" title="TTAudioPlayer"></a><code>TTAudioPlayer</code></h5><p>播放器对象，实现了<code>TTPlayerProtocol</code>协议<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">TTAudioPlayer</span> : <span class="title">NSObject</span>&lt;<span class="title">TTPlayerProtocol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;TTAudioPlayerStatusDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">instancetype</span>)shareInstance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><h4 id="TTMusicModel"><a href="#TTMusicModel" class="headerlink" title="TTMusicModel"></a><code>TTMusicModel</code></h4><p>音乐数据模型，遵守<code>TTMusicModelProtocol</code>协议，可扩展</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">TTMusicModel</span> : <span class="title">NSObject</span>&lt;<span class="title">TTMusicModelProtocol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h4 id="问题与功能实现细节"><a href="#问题与功能实现细节" class="headerlink" title="问题与功能实现细节"></a>问题与功能实现细节</h4><h5 id="设置播放器在后台，锁屏，静音模式下都可以播放"><a href="#设置播放器在后台，锁屏，静音模式下都可以播放" class="headerlink" title="设置播放器在后台，锁屏，静音模式下都可以播放"></a>设置播放器在后台，锁屏，静音模式下都可以播放</h5><h6 id="1-在后台模式中打开音频播放模式"><a href="#1-在后台模式中打开音频播放模式" class="headerlink" title="1.在后台模式中打开音频播放模式"></a>1.在后台模式中打开音频播放模式</h6><p><strong>Targets–&gt;Capabilities–&gt;BackgroundModes–&gt;ON</strong></p><p><strong>勾选 Audio,Airplay,and Picture in Picture</strong><br><img src="http://ww1.sinaimg.cn/large/9f473525gy1fxoprqatr7j20r50ci0u2.jpg" alt=""></p><h6 id="2-设置音频类别"><a href="#2-设置音频类别" class="headerlink" title="2.设置音频类别"></a>2.设置音频类别</h6><p>这段代码我写在播放器初始化的时候<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">AVAudioSession</span> sharedInstance] setCategory:<span class="built_in">AVAudioSessionCategoryPlayback</span> error:<span class="literal">nil</span>];</span><br><span class="line">[[<span class="built_in">AVAudioSession</span> sharedInstance] setActive:<span class="literal">YES</span> error:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure></p><h6 id="3-开启后台任务"><a href="#3-开启后台任务" class="headerlink" title="3.开启后台任务"></a>3.开启后台任务</h6><p>前面两步做完之后，app进入后台音频是可以继续播放，但是播完一首之后，后面的就不会播放了，这里开启后台任务就好了</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> ()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UIBackgroundTaskIdentifier</span> bgTask;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>进入后台后开启任务<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)applicationDidEnterBackground:(<span class="built_in">UIApplication</span> *)application &#123;</span><br><span class="line"></span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] beginReceivingRemoteControlEvents];</span><br><span class="line">    bgTask = [application beginBackgroundTaskWithExpirationHandler:^&#123;</span><br><span class="line">    [application endBackgroundTask:<span class="keyword">self</span>-&gt;bgTask];</span><br><span class="line">    <span class="keyword">self</span>-&gt;bgTask = <span class="built_in">UIBackgroundTaskInvalid</span>;</span><br><span class="line">    &#125;];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>进入前台，结束后台任务<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)applicationWillEnterForeground:(<span class="built_in">UIApplication</span> *)application &#123;</span><br><span class="line">    <span class="keyword">if</span> (bgTask != <span class="built_in">UIBackgroundTaskInvalid</span>) &#123;</span><br><span class="line">    [application endBackgroundTask:bgTask];</span><br><span class="line">    bgTask = <span class="built_in">UIBackgroundTaskInvalid</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="处理中断事件"><a href="#处理中断事件" class="headerlink" title="处理中断事件"></a>处理中断事件</h5><p>监听中断通知</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(handleInterreptionNotification:) name:<span class="built_in">AVAudioSessionInterruptionNotification</span> object:[<span class="built_in">AVAudioSession</span> sharedInstance]];</span><br></pre></td></tr></table></figure><p>中断处理</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)handleInterreptionNotification:(<span class="built_in">NSNotification</span> *)notification &#123;</span><br><span class="line">    <span class="keyword">if</span> ([notification.userInfo count] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">AVAudioSessionInterruptionTypeBegan</span> == [notification.userInfo[<span class="built_in">AVAudioSessionInterruptionTypeKey</span>] intValue]) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"中断，暂停音乐"</span>);</span><br><span class="line">        [<span class="keyword">self</span> pause];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">AVAudioSessionInterruptionTypeEnded</span> == [notification.userInfo[<span class="built_in">AVAudioSessionInterruptionTypeKey</span>] intValue]) &#123;</span><br><span class="line">        <span class="built_in">NSError</span> *error,*activeError;</span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setCategory:<span class="built_in">AVAudioSessionCategoryPlayback</span> withOptions:<span class="number">0</span> error:&amp;error];</span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setActive:<span class="literal">YES</span> error:&amp;activeError];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"中断结束，设置类别失败:%@"</span>,error);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (activeError) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"中断结束，获取音频焦点失败:%@"</span>,activeError);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"中断结束，恢复音乐播放"</span>);</span><br><span class="line">            [<span class="keyword">self</span> continuePlay];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#### </p><ul><li><a href="https://github.com/TongFangyuan/Demos/tree/master/PlayerDemo" target="_blank" rel="noopener">下载Demo</a></li><li><a href="https://stackoverflow.com/questions/10429204/how-to-handle-background-audio-playing-while-ios-device-is-locked-or-on-another" target="_blank" rel="noopener">How to handle background audio playing while iOS device is locked or on another application?</a></li><li><a href="https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html" target="_blank" rel="noopener">在退出时启动后台任务</a></li><li><a href="https://developer.apple.com/library/archive/documentation/Audio/Conceptual/AudioSessionProgrammingGuide/AudioSessionCategoriesandModes/AudioSessionCategoriesandModes.html" target="_blank" rel="noopener">音频会话类别和模式</a></li><li><a href="https://www.cnblogs.com/ziyi--caolu/p/5673160.html" target="_blank" rel="noopener">音视频的缓冲处理</a></li><li><a href="https://stackoverflow.com/questions/5655864/check-play-state-of-avplayer" target="_blank" rel="noopener">判断播放器是否在播放</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近有个简单播放器的需求需要实现，公司其他项目本身已有播放器实现但是业务逻辑不满足现有需求，所以参照原有模块并结合相关资料自己实现了一个简单播放器，该播放器是基于&lt;code&gt;AVPlayer&lt;/code&gt;实现的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>「 转载 」利用gcd信号量将异步方法改造为同步方法</title>
    <link href="https://tongfangyuan.github.io/2018/11/23/%E3%80%8C%20%E8%BD%AC%E8%BD%BD%20%E3%80%8D%E5%88%A9%E7%94%A8gcd%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%B0%86%E5%BC%82%E6%AD%A5%E6%96%B9%E6%B3%95%E6%94%B9%E9%80%A0%E4%B8%BA%E5%90%8C%E6%AD%A5%E6%96%B9%E6%B3%95%20/"/>
    <id>https://tongfangyuan.github.io/2018/11/23/「 转载 」利用gcd信号量将异步方法改造为同步方法 /</id>
    <published>2018-11-23T08:58:02.000Z</published>
    <updated>2018-12-06T05:51:22.784Z</updated>
    
    <content type="html"><![CDATA[<p>异步方法改为同步方法，转自<a href="https://m.weibo.cn/search?containerid=231522type%3D1%26q%3D%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23%26t%3D10&amp;extparam=%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23&amp;luicode=20000061&amp;lfid=4293108377612887" target="_blank" rel="noopener">#iOS知识小集#</a><br><a id="more"></a></p><blockquote><p>有的时候，我们会遇到一个同步方法（该方法的所有工作在返回之前已全部完成）的内部实现，需要依赖其他异步过程的情况。比如接口定义了一个开启聊天会话的方法，返回值为布尔值。从返回值类型不难推测，我们希望这个方法返回之时，会话是否开启成功就已经确切得知。然而，开启会话的内部实现仅仅是向服务端发起连接请求，是否连接成功需要等待服务端的响应，显然这是一个异步的过程。这就是一个常见的异步过程需要改造为同步（对外表现同步）的场景。如何实现呢？可以采用 gcd 的信号量：发起连接请求之前，创建一个初始值为 0 的信号量，在方法返回之前请求该信号量（P 操作），同时，在连接请求的结果回调中释放该信号量（V 操作）。这样，发起连接请求后，由于信号量初始值为0，会阻塞在请求信号量的地方，连接请求回调回来之后，释放信号量，刚刚的信号量请求被满足，方法得以返回。这样对外表现即为一个同步且耗时的开启会话操作，虽然这个场景比较别扭，但与此类似的情景是很常见的。</p></blockquote><h5 id="在大家熟知的-AFNetworking-中，就有这样的应用："><a href="#在大家熟知的-AFNetworking-中，就有这样的应用：" class="headerlink" title="在大家熟知的 AFNetworking 中，就有这样的应用："></a>在大家熟知的 <code>AFNetworking</code> 中，就有这样的应用：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">- (NSArray *)tasksForKeyPath:(NSString *)keyPath &#123;</span><br><span class="line"></span><br><span class="line">__block NSArray *tasks = nil;</span><br><span class="line"></span><br><span class="line">dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);</span><br><span class="line"></span><br><span class="line">[self.session getTasksWithCompletionHandler:^(NSArray *dataTasks, NSArray *uploadTasks, NSArray *downloadTasks) &#123;</span><br><span class="line"></span><br><span class="line">if ([keyPath isEqualToString:NSStringFromSelector( @selector(dataTasks))]) &#123;</span><br><span class="line"></span><br><span class="line">tasks = dataTasks;</span><br><span class="line"></span><br><span class="line">&#125; else if ([keyPath isEqualToString:NSStringFromSelector( @selector(uploadTasks))]) &#123;</span><br><span class="line"></span><br><span class="line">tasks = uploadTasks;</span><br><span class="line"></span><br><span class="line">&#125; else if ([keyPath isEqualToString:NSStringFromSelector( @selector(downloadTasks))]) &#123;</span><br><span class="line"></span><br><span class="line">tasks = downloadTasks;</span><br><span class="line"></span><br><span class="line">&#125; else if ([keyPath isEqualToString:NSStringFromSelector( @selector(tasks))]) &#123;</span><br><span class="line"></span><br><span class="line">tasks = [@[dataTasks, uploadTasks, downloadTasks] valueForKeyPath:@&quot; @unionOfArrays.self&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dispatch_semaphore_signal(semaphore);</span><br><span class="line"></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class="line"></span><br><span class="line">return tasks;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h4><ul><li><a href="https://m.weibo.cn/search?containerid=231522type%3D1%26q%3D%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23%26t%3D10&amp;extparam=%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23&amp;luicode=20000061&amp;lfid=4293108377612887" target="_blank" rel="noopener">#iOS知识小集#</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;异步方法改为同步方法，转自&lt;a href=&quot;https://m.weibo.cn/search?containerid=231522type%3D1%26q%3D%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23%26t%3D10&amp;amp;extparam=%23iOS%E7%9F%A5%E8%AF%86%E5%B0%8F%E9%9B%86%23&amp;amp;luicode=20000061&amp;amp;lfid=4293108377612887&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#iOS知识小集#&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
      <category term="转载" scheme="https://tongfangyuan.github.io/categories/iOS/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 使用第三方字体</title>
    <link href="https://tongfangyuan.github.io/2018/11/21/iOS%20%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%AD%97%E4%BD%93/"/>
    <id>https://tongfangyuan.github.io/2018/11/21/iOS 使用第三方字体/</id>
    <published>2018-11-21T14:01:15.000Z</published>
    <updated>2018-11-21T14:21:19.522Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近做项目有要求使用第三方字体的功能，查了些资料，完成需求后便整理记录一下。<br><a id="more"></a></p></blockquote><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>1.获得第三方字体（一般由UI提供）</li><li>2.添加第三方字体到项目</li><li>3.在<code>info.plist</code>文件中添加<code>Fonts provided by application</code>字段并添加支持的第三方字体</li><li>4.获取第三方字体的<code>FontName</code></li></ul><h4 id="添加第三方字体到项目"><a href="#添加第三方字体到项目" class="headerlink" title="添加第三方字体到项目"></a>添加第三方字体到项目</h4><p><img src="http://ww1.sinaimg.cn/large/9f473525gy1fxg0lz0mzhj207e04lq4o.jpg" alt=""></p><h4 id="在info-plist文件中添加Fonts-provided-by-application字段并添加支持的第三方字体"><a href="#在info-plist文件中添加Fonts-provided-by-application字段并添加支持的第三方字体" class="headerlink" title="在info.plist文件中添加Fonts provided by application字段并添加支持的第三方字体"></a>在<code>info.plist</code>文件中添加<code>Fonts provided by application</code>字段并添加支持的第三方字体</h4><p><img src="http://ww1.sinaimg.cn/large/9f473525gy1fxg0n8tqh0j20i302xq3d.jpg" alt=""></p><p>也可以代码的形式添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;UIAppFonts&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">    &lt;string&gt;CHANTAL.TTF&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;filsonsoft-book.otf&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;filsonsoft-light.otf&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;sf-pro-text_regular.ttf&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br></pre></td></tr></table></figure></p><h4 id="控制台打印字体"><a href="#控制台打印字体" class="headerlink" title="控制台打印字体"></a>控制台打印字体</h4><p><img src="http://ww1.sinaimg.cn/large/9f473525gy1fxg0ruyfdvj20sd0czjxh.jpg" alt=""><br>可以看见系统已经支持<code>CHANTAL-Normal</code>字体了</p><h4 id="使用第三方字体"><a href="#使用第三方字体" class="headerlink" title="使用第三方字体"></a>使用第三方字体</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.label1.font = [UIFont fontWithName:@&quot;CHANTAL-Normal&quot; size:16];</span><br><span class="line">self.label2.font = [UIFont fontWithName:@&quot;FilsonSoft-Light&quot; size:116];</span><br><span class="line">self.label3.font = [UIFont fontWithName:@&quot;FilsonSoftBook&quot; size:16];</span><br><span class="line">self.label4.font = [UIFont fontWithName:@&quot;SFProText-Regular&quot; size:16];</span><br></pre></td></tr></table></figure><p>显示效果<br><img src="http://ww1.sinaimg.cn/large/9f473525gy1fxg0u5gjbtj20ku112aan.jpg" alt=""></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="https://github.com/TongFangyuan/Demos/tree/master/ThirdFontDemo" target="_blank" rel="noopener">本文Demo</a></li><li><a href="https://juejin.im/post/5a3214f36fb9a0451238f744" target="_blank" rel="noopener">iOS 在 App 中使用自定义字体</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近做项目有要求使用第三方字体的功能，查了些资料，完成需求后便整理记录一下。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 正则表达式的运用</title>
    <link href="https://tongfangyuan.github.io/2018/10/26/iOS%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%90%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://tongfangyuan.github.io/2018/10/26/iOS 正则表达式运用记录/</id>
    <published>2018-10-26T03:45:25.000Z</published>
    <updated>2018-11-12T09:01:27.053Z</updated>
    
    <content type="html"><![CDATA[<p>开发随记，方便自己查阅。</p><p>运用正则表达式进行纯中文数字校验。</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近项目接入阿里天猫精灵语音交互平台，遇到个问题，对app说打电话给10086，云端返回<code>幺零零八六</code>，导致客户端无法正确识别，服务端能力不全，所以先在客户端解决，解决方法就是用正则表达式进行判断，然后转对应的阿拉伯数字，写完顺便记录下来方便以后查看。</p><h2 id="纯中文数字校验"><a href="#纯中文数字校验" class="headerlink" title="纯中文数字校验"></a>纯中文数字校验</h2><p>简单，就两步：</p><ol><li>匹配规则</li><li>校验字符串</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)isCNNumer:(NSString *)checkedNumString</span><br><span class="line">&#123;</span><br><span class="line">NSString *numer2 = @&quot;^[一壹幺二贰两三叁四肆五伍六陆七柒拐八捌九玖勾〇零洞]+$&quot;;</span><br><span class="line">NSPredicate *chNumberPre = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,numer2];</span><br><span class="line">return [chNumberPre evaluateWithObject:checkedNumString]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.jianshu.com/p/ea10003d224a" target="_blank" rel="noopener">iOS正则表达式</a></li><li><a href="https://my.oschina.net/u/1245365/blog/376517" target="_blank" rel="noopener">正则表达式在iOS中的运用</a></li><li><a href="https://www.jianshu.com/p/13774c6bbdaa" target="_blank" rel="noopener">常用的正则表达式</a></li><li><a href="https://www.jianshu.com/p/a3dd72eadfa3" target="_blank" rel="noopener">iOS开发——正则表达式验证手机号、密码</a></li><li><a href="https://c.runoob.com/front-end/854" target="_blank" rel="noopener">正则表达式在线测试</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发随记，方便自己查阅。&lt;/p&gt;
&lt;p&gt;运用正则表达式进行纯中文数字校验。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS资料整理（8月）</title>
    <link href="https://tongfangyuan.github.io/2018/08/16/iOS%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86%EF%BC%888%E6%9C%88%EF%BC%89/"/>
    <id>https://tongfangyuan.github.io/2018/08/16/iOS资料整理（8月）/</id>
    <published>2018-08-16T02:52:45.000Z</published>
    <updated>2018-11-12T09:01:27.054Z</updated>
    
    <content type="html"><![CDATA[<p>最近一段时间，蓝牙打印机项目中搜集到的一些资料（不仅限于蓝牙打印机）。</p><a id="more"></a><h2 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h2><ul><li><a href="https://everettjf.github.io/2018/01/15/ios-app-reverse-engineering-stuff/" target="_blank" rel="noopener">iOS应用逆向工程资料汇总</a></li><li><a href="http://iosre.com/t/topic/4680" target="_blank" rel="noopener">学习资料资源入口整理（一起整理啦）</a></li><li><a href="https://web.securityinnovation.com/hubfs/iOS%20Hacking%20Guide.pdf" target="_blank" rel="noopener">一本挺“新”的入门书 Hacking iOS Applications</a></li></ul><h2 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h2><ul><li><a href="https://nshipster.cn/nsundomanager/" target="_blank" rel="noopener">撤销/重做功能</a></li><li><a href="https://www.jianshu.com/p/c2caa84405b0" target="_blank" rel="noopener">iOS富文本</a></li><li><a href="https://www.jianshu.com/p/bbfe7bd282f1" target="_blank" rel="noopener">富文本AttributedString的总结（一）</a></li><li><a href="https://stackoverflow.com/questions/754824/get-an-object-properties-list-in-objective-c" target="_blank" rel="noopener">Runtime获取类的所有属性值</a></li><li><a href="https://blog.csdn.net/typename/article/details/6730183" target="_blank" rel="noopener">NSString 与C++ string字符串的互转</a></li><li><a href="https://www.jianshu.com/p/8609257ed49e" target="_blank" rel="noopener">ios设置黑体/加粗/斜体/Attributes</a></li><li><a href="https://www.jianshu.com/p/b33bdbccfa57" target="_blank" rel="noopener">利用runtime实现NSCopying</a></li><li><a href="https://www.jianshu.com/p/beefa2da05b5" target="_blank" rel="noopener">@synthesize的妙用</a></li><li><a href="https://stackoverflow.com/questions/8460119/how-to-resize-uiview-by-dragging-from-its-edges" target="_blank" rel="noopener">Resize UIView by dragging from its edges</a></li><li><a href="https://stackoverflow.com/questions/24989410/uipangesturerecognizer-offset-view-under-finger" target="_blank" rel="noopener">UIPanGestureRecognizer: Offset view under finger</a></li><li><a href="https://stackoverflow.com/questions/2658738/the-simplest-way-to-resize-an-uiimage" target="_blank" rel="noopener">The simplest way to resize an UIImage</a></li><li><a href="https://www.jianshu.com/p/c962403cae65" target="_blank" rel="noopener">图片二值化和黑白(灰度)处理</a></li><li><a href="http://www.voidcn.com/article/p-tcobghxu-bpr.html" target="_blank" rel="noopener">彩色图片置灰，灰度图片</a></li><li><a href="https://cdn2.jianshu.io/p/3e2cca585ccc" target="_blank" rel="noopener">CIFilter_看了这个，你就可以打造自己的美图秀秀</a></li><li><a href="https://stackoverflow.com/questions/10030631/what-is-the-best-core-image-filter-to-produce-black-and-white-effects?rq=1" target="_blank" rel="noopener">What is the best Core Image filter to produce black and white effects?</a></li><li><a href="https://developer.apple.com/library/archive/documentation/GraphicsImaging/Conceptual/CoreImaging/ci_intro/ci_intro.html#//apple_ref/doc/uid/TP30001185-CH1-TPXREF101" target="_blank" rel="noopener">Core Image Programming Guide</a></li><li><a href="https://www.cnblogs.com/fengmin/p/5586729.html" target="_blank" rel="noopener">iOS开发之滤镜的使用技巧（CoreImage）</a></li><li><a href="https://blog.csdn.net/cjh965063777/article/details/49096383" target="_blank" rel="noopener">iOS 对Image图片本身进行旋转0，90，180，270</a></li><li><a href="https://stackoverflow.com/questions/19523487/find-frame-coordinates-after-uiview-transform-is-applied-cgaffinetransform" target="_blank" rel="noopener">Find Frame Coordinates After UIView Transform is Applied (CGAffineTransform)</a></li><li><a href="https://stackoverflow.com/questions/38286527/drag-behaviour-wrong-after-uiview-transformation" target="_blank" rel="noopener">Drag behaviour wrong after UIView transformation</a></li><li><a href="https://stackoverflow.com/questions/5802830/weird-behavior-of-uiview-frame-after-rotation-in-iphone" target="_blank" rel="noopener">Weird behavior of UIView frame after rotation in iPhone</a></li></ul><h2 id="条形码、二维码生成"><a href="#条形码、二维码生成" class="headerlink" title="条形码、二维码生成"></a>条形码、二维码生成</h2><ul><li><a href="https://www.jianshu.com/p/f1e1bf4aefb4" target="_blank" rel="noopener">使用iOS原生的CIFilter生成二维码和条形码</a></li><li><a href="https://www.jianshu.com/p/70931bbe63c6" target="_blank" rel="noopener">iOS生成高清二维码</a></li><li><a href="https://www.jianshu.com/p/c38058ce8ffb" target="_blank" rel="noopener">iOS通过CIFilter生成条形码和二维码(Swift3.0)</a></li><li><a href="https://www.jianshu.com/p/43c8e6a1702f" target="_blank" rel="noopener">iOS 生成二维码图片模糊不清问题</a></li><li><a href="https://github.com/TheLevelUp/ZXingObjC" target="_blank" rel="noopener">第三方库ZXingObjC</a></li></ul><h2 id="蓝牙打印机"><a href="#蓝牙打印机" class="headerlink" title="蓝牙打印机"></a>蓝牙打印机</h2><ul><li><a href="https://www.zebra.com/content/dam/zebra/manuals/zh-cn/printers/proman-cpcl-061-zh-cn.pdf" target="_blank" rel="noopener">移动打印系统 CPCL 编程手册</a></li><li><a href="https://www.jianshu.com/p/d8df9d01aae8" target="_blank" rel="noopener">iOS 关于CPCL指令打印图片的解释说明</a></li><li><a href="https://github.com/Zebra/LinkOS-iOS-Samples" target="_blank" rel="noopener">Zebra/LinkOS-iOS-Samples</a></li><li><a href="https://blog.csdn.net/iosYangming/article/details/80270469" target="_blank" rel="noopener">iOS 连接打印机 ESC/POS 指令打印 打印图片二维码</a></li><li><a href="https://github.com/EricADockery/ZebraPrinterDemo" target="_blank" rel="noopener">ZebraPrinterDemo</a></li><li><a href="https://github.com/KouMeanSun/BLEPrinter_CPCL_Demo" target="_blank" rel="noopener">BLEPrinter_CPCL_Demo</a></li></ul><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul><li><a href="https://blog.devzeng.com/blog/using-custom-font-in-ios.html" target="_blank" rel="noopener">在iOS开发中使用自定义字体</a></li><li><a href="https://www.jianshu.com/p/e29c37639d81" target="_blank" rel="noopener">IOS导入TFF 字体文件使用自定义字体</a></li><li><a href="https://developer.apple.com/library/archive/samplecode/DownloadFont/Introduction/Intro.html" target="_blank" rel="noopener">官方字体下载Demo</a></li><li><a href="https://blog.csdn.net/shengdaVolleyball/article/details/52130992" target="_blank" rel="noopener">iOS字体号数与像素对应关系</a></li></ul><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><ul><li><a href="https://www.jianshu.com/p/c7bfaf766abb" target="_blank" rel="noopener">iOS 给dictionary字典排序</a></li></ul><h2 id="异常捕获"><a href="#异常捕获" class="headerlink" title="异常捕获"></a>异常捕获</h2><ul><li><a href="http://www.iosxxx.com/blog/2015-08-29-iosyi-chang-bu-huo.html" target="_blank" rel="noopener">iOS异常捕获</a></li><li><a href="https://www.cnblogs.com/GarveyCalvin/p/4182861.html" target="_blank" rel="noopener">iOS捕获异常，常用的异常处理方法</a></li><li><a href="http://xgfe.github.io/2017/03/23/lrdcq/ios-crash-catch-and-analyze/" target="_blank" rel="noopener">iOS Crash栈的捕获和分析</a></li></ul><h2 id="Cocoapods"><a href="#Cocoapods" class="headerlink" title="Cocoapods"></a>Cocoapods</h2><ul><li><a href="https://www.jianshu.com/p/b8406ff1e2f1" target="_blank" rel="noopener">Cocopods 遇到You don’t have write permissions for the /usr/bin directory.</a></li><li><a href="https://juejin.im/post/5a32900a6fb9a045132aba3c" target="_blank" rel="noopener">解决Cocoapods贼慢问题</a></li><li><a href="https://www.cnblogs.com/yiqiedejuanlian/p/3698788.html" target="_blank" rel="noopener">CocoaPods pod install/pod update更新慢的问题</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://www.jianshu.com/p/df4e92966dc0" target="_blank" rel="noopener">设置启动图片</a></li><li><a href="https://www.kancloud.cn/melissashu/ios/562301" target="_blank" rel="noopener">iPhone尺寸· iOS 开发笔记</a></li><li><a href="http://www.beyondabel.com/blog/2014/01/10/uisegmentedcontrol/" target="_blank" rel="noopener">iOS组件之UISegmentedControl详解</a></li><li><a href="https://github.com/chenliangloveyou/EasyNavigation" target="_blank" rel="noopener">一款超级简单的导航条管理工具。完全自定义导航条</a></li><li><a href="https://github.com/ChenYilong/CYLTabBarController" target="_blank" rel="noopener">【中国特色 TabBar】最低只需传两个数组即可完成主流App框架搭建【iPhoneX supported】</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一段时间，蓝牙打印机项目中搜集到的一些资料（不仅限于蓝牙打印机）。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="资料" scheme="https://tongfangyuan.github.io/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>利用 Class-dump 反编译第三方ipa</title>
    <link href="https://tongfangyuan.github.io/2018/07/03/%E5%88%A9%E7%94%A8%20Class-dump%20%E5%8F%8D%E7%BC%96%E8%AF%91%E7%AC%AC%E4%B8%89%E6%96%B9ipa/"/>
    <id>https://tongfangyuan.github.io/2018/07/03/利用 Class-dump 反编译第三方ipa/</id>
    <published>2018-07-03T02:54:03.000Z</published>
    <updated>2018-07-04T13:38:21.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Class-dump"><a href="#Class-dump" class="headerlink" title="Class-dump"></a>Class-dump</h3><p>一款命令行应用程序，可以反编译出第三方ipa包的类、分类、协议。可以用来学习一些优秀app的设计和实现方式等。</p><a id="more"></a><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>本文下载的是 <strong>3.5 (64 bit)</strong> 版本的</p><p>需要 <strong>Mac OS X 10.8</strong> 或者以上</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>把下载的<code>class-dump</code>(DMG解压后的文件)文件移动到<code>/usr/local/bin</code>文件夹中</li><li>赋予<code>class-dump</code>文件<code>777</code>权限后就可以开始使用了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 /usr/local/bin/class-dump</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>安装完成后再终端输入<code>class-dump --help</code>可以查看用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class-dump 3.5 (64 bit)</span><br><span class="line">Usage: class-dump [options] &lt;mach-o-file&gt;</span><br><span class="line"></span><br><span class="line">  where options are:</span><br><span class="line">        -a             show instance variable offsets</span><br><span class="line">        -A             show implementation addresses</span><br><span class="line">        --arch &lt;arch&gt;  choose a specific architecture from a universal binary (ppc, ppc64, i386, x86_64)</span><br><span class="line">        -C &lt;regex&gt;     only display classes matching regular expression</span><br><span class="line">        -f &lt;str&gt;       find string in method name</span><br><span class="line">        -H             generate header files in current directory, or directory specified with -o</span><br><span class="line">        -I             sort classes, categories, and protocols by inheritance (overrides -s)</span><br><span class="line">        -o &lt;dir&gt;       output directory used for -H</span><br><span class="line">        -r             recursively expand frameworks and fixed VM shared libraries</span><br><span class="line">        -s             sort classes and categories by name</span><br><span class="line">        -S             sort methods by name</span><br><span class="line">        -t             suppress header in output, for testing</span><br><span class="line">        --list-arches  list the arches in the file, then exit</span><br><span class="line">        --sdk-ios      specify iOS SDK version (will look in /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS&lt;version&gt;.sdk</span><br><span class="line">        --sdk-mac      specify Mac OS X version (will look in /Developer/SDKs/MacOSX&lt;version&gt;.sdk</span><br><span class="line">        --sdk-root     specify the full SDK root path (or use --sdk-ios/--sdk-mac for a shortcut)</span><br></pre></td></tr></table></figure></p><h4 id="反编译出ipa包中的头文件信息"><a href="#反编译出ipa包中的头文件信息" class="headerlink" title="反编译出ipa包中的头文件信息"></a>反编译出<code>ipa</code>包中的头文件信息</h4><p>本文以微信读书<code>ipa</code>书为例，越狱ipa可以在某助手下载，也可以自己砸壳</p><h5 id="解压ipa包，得到解压后的文件"><a href="#解压ipa包，得到解压后的文件" class="headerlink" title="解压ipa包，得到解压后的文件"></a>解压<code>ipa</code>包，得到解压后的文件</h5><p><img src="http://ww1.sinaimg.cn/mw690/82d0ef27gy1fs3qtyise8j20he04udh1.jpg" alt=""></p><h5 id="解压后得到的文件"><a href="#解压后得到的文件" class="headerlink" title="解压后得到的文件"></a>解压后得到的文件</h5><p><img src="http://ww1.sinaimg.cn/mw690/82d0ef27gy1fs3qrx8ng7j207f03x0t4.jpg" alt="解压后得到文件"></p><h5 id="运行命令反编译出头文件"><a href="#运行命令反编译出头文件" class="headerlink" title="运行命令反编译出头文件"></a>运行命令反编译出头文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class-dump -H /Users/admin/Desktop/微信读书-2.4.6\(越狱应用\)\ 2/Payload/WeRead.app -o /Users/admin/Desktop/微信读书-2.4.6\(越狱应用\)\ 2/Payload</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/mw690/82d0ef27gy1fs3qxlizlfj20pd0d6wi9.jpg" alt=""></p><p>以上就完成了ipa包的反编译，方便学习大厂代码</p><h3 id="相关的资料"><a href="#相关的资料" class="headerlink" title="相关的资料"></a>相关的资料</h3><ul><li><a href="https://github.com/nygard/class-dump" target="_blank" rel="noopener">在github查看项目</a></li><li><a href="http://stevenygard.com/" target="_blank" rel="noopener">作者 Steve Nygard 博客</a></li><li><a href="http://stevenygard.com/projects/class-dump/" target="_blank" rel="noopener">工具更新日志</a></li><li><a href="https://www.jianshu.com/p/1e3fe0a8c048" target="_blank" rel="noopener">安装教程</a></li><li><a href="http://stevenygard.com/projects/class-dump/" target="_blank" rel="noopener">下载地址</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Class-dump&quot;&gt;&lt;a href=&quot;#Class-dump&quot; class=&quot;headerlink&quot; title=&quot;Class-dump&quot;&gt;&lt;/a&gt;Class-dump&lt;/h3&gt;&lt;p&gt;一款命令行应用程序，可以反编译出第三方ipa包的类、分类、协议。可以用来学习一些优秀app的设计和实现方式等。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="逆向" scheme="https://tongfangyuan.github.io/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>资料整理集合</title>
    <link href="https://tongfangyuan.github.io/2018/06/28/%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86%E9%9B%86%E5%90%88/"/>
    <id>https://tongfangyuan.github.io/2018/06/28/资料整理集合/</id>
    <published>2018-06-28T12:54:10.000Z</published>
    <updated>2018-07-07T03:28:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些可能会用到的资料整理集合</p><a id="more"></a><h3 id="设计类"><a href="#设计类" class="headerlink" title="设计类"></a>设计类</h3><ul><li><a href="http://nipponcolors.com/#cyohsyun" target="_blank" rel="noopener">一个非常棒的日本配色网站</a></li><li><a href="https://pbs.twimg.com/media/AuiY8ThCIAIyKxh.png:large" target="_blank" rel="noopener">一个好看的配色方案</a></li><li><a href="https://www.25xt.com/appdesign/15067.html" target="_blank" rel="noopener">五套舒适的配色方案</a></li></ul><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><ul><li><a href="http://www.axuer.com/article/32" target="_blank" rel="noopener">9款ios开发者辅助工具</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些可能会用到的资料整理集合&lt;/p&gt;
    
    </summary>
    
      <category term="资料" scheme="https://tongfangyuan.github.io/categories/%E8%B5%84%E6%96%99/"/>
    
    
      <category term="资料" scheme="https://tongfangyuan.github.io/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>关于夜间模式功能实践的一次记录</title>
    <link href="https://tongfangyuan.github.io/2018/06/26/%E5%85%B3%E4%BA%8E%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F%E5%8A%9F%E8%83%BD%E5%AE%9E%E8%B7%B5%E7%9A%84%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95/"/>
    <id>https://tongfangyuan.github.io/2018/06/26/关于夜间模式功能实践的一次记录/</id>
    <published>2018-06-26T03:26:16.000Z</published>
    <updated>2018-06-26T13:28:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近完成app小版本迭代，在论坛看见某个求职贴写着<code>熟练使用Method Swizzling技能</code>，想起15年有阵各种关于<code>iOS黑科技</code>技术贴满天飞，自己也看了些，但是好像实际开发中也确实用的很少（可能确实比较菜🤣）。于是趁着这阵不忙实践一下，第一个就想到夜间模式这个功能用<code>Method Swizzling</code>实现比较合适，相信也是很多开发者第一选择吧，写了个简单demo后发现确实省事儿。</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><h3 id="动图"><a href="#动图" class="headerlink" title="动图"></a>动图</h3><p><img src="http://ww1.sinaimg.cn/large/82d0ef27gy1fsof1ijtxug20d50nc1kx.gif" alt="image"></p><a id="more"></a><h3 id="常用的视图控件继承关系图"><a href="#常用的视图控件继承关系图" class="headerlink" title="常用的视图控件继承关系图"></a>常用的视图控件继承关系图</h3><p><img src="http://ww1.sinaimg.cn/large/82d0ef27gy1fsnh3jayygj21ek174477.jpg" alt="image"></p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>本文关于夜间模式功能的实现用到了<code>Category</code>、<code>Method Swizzling</code>、<code>Notification</code>三个特性，具体步骤大致是新建<code>UIView</code>分类，重载<code>+(void)load</code>方法，在重载方法里面替换掉<code>UIView</code>两个实例化方法（<code>initWithFrame:</code>、<code>initWithCoder:</code>)的，添加接收夜间模式开关的通知，收到通知后根据具体类更新各自UI。</p><h3 id="在重载方法load中替换UIView两个实例化方法"><a href="#在重载方法load中替换UIView两个实例化方法" class="headerlink" title="在重载方法load中替换UIView两个实例化方法"></a>在重载方法<code>load</code>中替换<code>UIView</code>两个实例化方法</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">void</span>)load &#123;</span><br><span class="line">    [<span class="keyword">super</span> load];</span><br><span class="line">    [<span class="keyword">self</span> exchangeMethods];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="利用Method-Swizzling替换实现"><a href="#利用Method-Swizzling替换实现" class="headerlink" title="利用Method Swizzling替换实现"></a>利用<code>Method Swizzling</code>替换实现</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">void</span>)exchangeInitWithCoderMethod &#123;</span><br><span class="line">    Class <span class="keyword">class</span> = [<span class="keyword">self</span> <span class="keyword">class</span>];</span><br><span class="line">    </span><br><span class="line">    SEL originalSelector = <span class="keyword">@selector</span>(initWithCoder:);</span><br><span class="line">    SEL swizzledSelector = <span class="keyword">@selector</span>(nm_initWithCoder:);</span><br><span class="line">    </span><br><span class="line">    Method originalMethod = class_getInstanceMethod(<span class="keyword">class</span>, originalSelector);</span><br><span class="line">    Method swizzledMethod = class_getInstanceMethod(<span class="keyword">class</span>, swizzledSelector);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> didAddMethod = class_addMethod(<span class="keyword">class</span>, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod));</span><br><span class="line">    <span class="keyword">if</span> (didAddMethod) &#123;</span><br><span class="line">        class_replaceMethod(<span class="keyword">class</span>, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        method_exchangeImplementations(originalMethod, swizzledMethod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)exchangeInitWithFrameMethod &#123;</span><br><span class="line">    Class <span class="keyword">class</span> = [<span class="keyword">self</span> <span class="keyword">class</span>];</span><br><span class="line">    </span><br><span class="line">    SEL originalSelector = <span class="keyword">@selector</span>(initWithFrame:);</span><br><span class="line">    SEL swizzledSelector = <span class="keyword">@selector</span>(nm_initWithFrame:);</span><br><span class="line">    </span><br><span class="line">    Method originalMethod = class_getInstanceMethod(<span class="keyword">class</span>, originalSelector);</span><br><span class="line">    Method swizzledMethod = class_getInstanceMethod(<span class="keyword">class</span>, swizzledSelector);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> didAddMethod = class_addMethod(<span class="keyword">class</span>, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod));</span><br><span class="line">    <span class="keyword">if</span> (didAddMethod) &#123;</span><br><span class="line">        class_replaceMethod(<span class="keyword">class</span>, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        method_exchangeImplementations(originalMethod, swizzledMethod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在替换方法中注册接收夜间模式开关状态的通知"><a href="#在替换方法中注册接收夜间模式开关状态的通知" class="headerlink" title="在替换方法中注册接收夜间模式开关状态的通知"></a>在替换方法中注册接收夜间模式开关状态的通知</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">instancetype</span>)nm_initWithCoder:(<span class="built_in">NSCoder</span> *)coder&#123;</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:NightModeChangeNotificationKey object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(nm_updateNightModeStatusNotification:) name:NightModeChangeNotificationKey object:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> nm_initWithCoder:coder];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)nm_initWithFrame:(<span class="built_in">CGRect</span>)frame &#123;</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span> name:NightModeChangeNotificationKey object:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(nm_updateNightModeStatusNotification:) name:NightModeChangeNotificationKey object:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> nm_initWithFrame:frame];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="外部发送通知，视图自动更新对应状态的UI"><a href="#外部发送通知，视图自动更新对应状态的UI" class="headerlink" title="外部发送通知，视图自动更新对应状态的UI"></a>外部发送通知，视图自动更新对应状态的UI</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">IBAction</span>)lightSwitchAction:(<span class="built_in">UISwitch</span> *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotificationName:NightModeChangeNotificationKey object:[<span class="built_in">NSNumber</span> numberWithInteger:sender.isOn]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>实现起来不是很难，<code>Method Swizzling</code>实现类似需求确实有奇效，不过具体项目中还没使用过，有什么坑也就不清楚了，看了关于<code>Method Swizzling</code>几篇文章，褒贬不一。个人认为这类黑科技的使用看具体情况吧，团队开发中肯定是要避免滥用的（不要只是为了秀）,其他就不发表看法了，毕竟没资质🤣。</p><p>其实，关于<code>Method Swizzling</code>的那段代码我是<code>copy</code>的，后面如果有使用这项技术，我还是会回来<code>copy</code>下，毕竟不常用🤣。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><ul><li><a href="https://github.com/TongFangyuan/Demos/tree/master/demo1" target="_blank" rel="noopener">本文Demo</a></li><li><a href="http://blog.leichunfeng.com/blog/2015/06/14/objective-c-method-swizzling-best-practice/" target="_blank" rel="noopener">Objective-C Method Swizzling 的最佳实践</a></li><li><a href="http://nshipster.cn/method-swizzling/" target="_blank" rel="noopener">Method Swizzling</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近完成app小版本迭代，在论坛看见某个求职贴写着&lt;code&gt;熟练使用Method Swizzling技能&lt;/code&gt;，想起15年有阵各种关于&lt;code&gt;iOS黑科技&lt;/code&gt;技术贴满天飞，自己也看了些，但是好像实际开发中也确实用的很少（可能确实比较菜🤣）。于是趁着这阵不忙实践一下，第一个就想到夜间模式这个功能用&lt;code&gt;Method Swizzling&lt;/code&gt;实现比较合适，相信也是很多开发者第一选择吧，写了个简单demo后发现确实省事儿。&lt;/p&gt;
&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;h3 id=&quot;动图&quot;&gt;&lt;a href=&quot;#动图&quot; class=&quot;headerlink&quot; title=&quot;动图&quot;&gt;&lt;/a&gt;动图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/82d0ef27gy1fsof1ijtxug20d50nc1kx.gif&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 开发笔记（三）</title>
    <link href="https://tongfangyuan.github.io/2018/06/12/iOS%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://tongfangyuan.github.io/2018/06/12/iOS 开发笔记（三）/</id>
    <published>2018-06-12T02:31:59.000Z</published>
    <updated>2018-07-04T13:38:21.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="UITableViewCell-左滑删除功能"><a href="#UITableViewCell-左滑删除功能" class="headerlink" title="UITableViewCell 左滑删除功能"></a>UITableViewCell 左滑删除功能</h3><h4 id="开启编辑模式"><a href="#开启编辑模式" class="headerlink" title="开启编辑模式"></a>开启编辑模式</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView canEditRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件类型"><a href="#事件类型" class="headerlink" title="事件类型"></a>事件类型</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UITableViewCellEditingStyle</span>)tableView:(<span class="built_in">UITableView</span> *)tableView editingStyleForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="built_in">UITableViewCellEditingStyleDelete</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除按钮标题"><a href="#删除按钮标题" class="headerlink" title="删除按钮标题"></a>删除按钮标题</h4><p>UITableViewCellEditingStyleDelete默认就是删除，可以不用实现该方法<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">@"删除"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="事件提交"><a href="#事件提交" class="headerlink" title="事件提交"></a>事件提交</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</span><br><span class="line">    [<span class="keyword">self</span> fy_showTitle:<span class="string">@"是否删除"</span> message:<span class="literal">nil</span> confirmHandler:^&#123;</span><br><span class="line">        AylaShare *share = _shares[indexPath.row];</span><br><span class="line">        [<span class="keyword">self</span> deleteShare:share];</span><br><span class="line">    &#125; cancelHandler:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="退出键盘"><a href="#退出键盘" class="headerlink" title="退出键盘"></a>退出键盘</h4><p>在<code>viewWillDisappear:</code>中调用有奇效<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">self</span>.view endEditing:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure></p><h4 id="联网时显示导航栏的菊花"><a href="#联网时显示导航栏的菊花" class="headerlink" title="联网时显示导航栏的菊花"></a>联网时显示导航栏的菊花</h4><p>优化用户体验<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">UIApplication</span> sharedApplication].networkActivityIndicatorVisible = <span class="literal">YES</span>;</span><br></pre></td></tr></table></figure></p><h4 id="获取UIView的所有子类"><a href="#获取UIView的所有子类" class="headerlink" title="获取UIView的所有子类"></a>获取<code>UIView</code>的所有子类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Class * classes = NULL;</span><br><span class="line">int numClasses = objc_getClassList(NULL, 0);</span><br><span class="line"></span><br><span class="line">if (numClasses &gt; 0 )</span><br><span class="line">&#123;</span><br><span class="line">    classes = malloc(sizeof(Class) * numClasses);</span><br><span class="line">    numClasses = objc_getClassList(classes, numClasses);</span><br><span class="line"></span><br><span class="line">    for (int i = 0; i &lt; numClasses; ++i)&#123;</span><br><span class="line">        if (class_getSuperclass(classes[i]) == [UIView class])&#123;</span><br><span class="line">            NSLog(@&quot;%@&quot;, NSStringFromClass(classes[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    free(classes);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#### </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;UITableViewCell-左滑删除功能&quot;&gt;&lt;a href=&quot;#UITableViewCell-左滑删除功能&quot; class=&quot;headerlink&quot; title=&quot;UITableViewCell 左滑删除功能&quot;&gt;&lt;/a&gt;UITableViewCell 左滑删除功能&lt;/h3&gt;&lt;h4 id=&quot;开启编辑模式&quot;&gt;&lt;a href=&quot;#开启编辑模式&quot; class=&quot;headerlink&quot; title=&quot;开启编辑模式&quot;&gt;&lt;/a&gt;开启编辑模式&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView canEditRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;事件类型&quot;&gt;&lt;a href=&quot;#事件类型&quot; class=&quot;headerlink&quot; title=&quot;事件类型&quot;&gt;&lt;/a&gt;事件类型&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCellEditingStyle&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView editingStyleForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UITableViewCellEditingStyleDelete&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;删除按钮标题&quot;&gt;&lt;a href=&quot;#删除按钮标题&quot; class=&quot;headerlink&quot; title=&quot;删除按钮标题&quot;&gt;&lt;/a&gt;删除按钮标题&lt;/h4&gt;&lt;p&gt;UITableViewCellEditingStyleDelete默认就是删除，可以不用实现该方法&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;@&quot;删除&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;事件提交&quot;&gt;&lt;a href=&quot;#事件提交&quot; class=&quot;headerlink&quot; title=&quot;事件提交&quot;&gt;&lt;/a&gt;事件提交&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView commitEditingStyle:(&lt;span class=&quot;built_in&quot;&gt;UITableViewCellEditingStyle&lt;/span&gt;)editingStyle forRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; fy_showTitle:&lt;span class=&quot;string&quot;&gt;@&quot;是否删除&quot;&lt;/span&gt; message:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; confirmHandler:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AylaShare *share = _shares[indexPath.row];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; deleteShare:share];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; cancelHandler:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 开发笔记（二）</title>
    <link href="https://tongfangyuan.github.io/2018/06/07/iOS%20%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://tongfangyuan.github.io/2018/06/07/iOS 开发笔记（二）/</id>
    <published>2018-06-07T14:20:17.000Z</published>
    <updated>2018-06-26T13:00:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>工作不常用但可能需要<code>google</code>的一些知识，整理总结一下，方便以后查找，本文收集的有4点：获取系统当前音量、<code>NSLog</code>宏定义、修改app语言、获取app基础信息。</p><a id="more"></a><h4 id="获取系统音量-iOS6以上可用"><a href="#获取系统音量-iOS6以上可用" class="headerlink" title="获取系统音量(iOS6以上可用)"></a>获取系统音量(iOS6以上可用)</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">AVAudioSession</span> sharedInstance] outputVolume]</span><br></pre></td></tr></table></figure><h4 id="NSLog宏"><a href="#NSLog宏" class="headerlink" title="NSLog宏"></a>NSLog宏</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#ifdef DEBUG</span></span><br><span class="line"><span class="meta">#define NSLog(format, ...) do &#123;                                             \</span></span><br><span class="line">fprintf(stderr, <span class="string">"&lt;%s : %d&gt; %s\n"</span>,                                           \</span><br><span class="line">[[[<span class="built_in">NSString</span> stringWithUTF8String:__FILE__] lastPathComponent] UTF8String],  \</span><br><span class="line">__LINE__, __func__);                                                        \</span><br><span class="line">(<span class="built_in">NSLog</span>)((format), <span class="meta">##__VA_ARGS__);                                           \</span></span><br><span class="line">fprintf(stderr, <span class="string">"-------\n"</span>);                                               \</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">0</span>)</span><br><span class="line"><span class="meta">#endif</span></span><br></pre></td></tr></table></figure><h4 id="修改应用语言为中文"><a href="#修改应用语言为中文" class="headerlink" title="修改应用语言为中文"></a>修改应用语言为中文</h4><ol><li>选中项目</li><li>选择<code>target</code></li><li><code>info</code>-&gt;<code>Localization native development region</code>-&gt;打开下拉选项卡选择<code>china</code></li></ol><p><img src="http://ww1.sinaimg.cn/large/82d0ef27gy1frujk3cwx8j20t50d8784.jpg"></p><h4 id="使用block回调方式接收通知"><a href="#使用block回调方式接收通知" class="headerlink" title="使用block回调方式接收通知"></a>使用<code>block</code>回调方式接收通知</h4><p>block回调会retain系统，需要注意循环引用<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserverForName:<span class="built_in">UITextFieldTextDidChangeNotification</span> object:<span class="keyword">self</span>.userTextField queue:[<span class="built_in">NSOperationQueue</span> mainQueue] usingBlock:^(<span class="built_in">NSNotification</span> * _Nonnull note) &#123;</span><br><span class="line">        <span class="built_in">UITextField</span> *textField = note.object;</span><br><span class="line">        <span class="keyword">if</span> (textField.text.length) &#123;</span><br><span class="line">            [weakSelf.doneButton setTitleColor:[<span class="built_in">UIColor</span> blackColor] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">            [weakSelf.doneButton setUserInteractionEnabled:<span class="literal">YES</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            [weakSelf.doneButton setTitleColor:[<span class="built_in">UIColor</span> lightGrayColor] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">            [weakSelf.doneButton setUserInteractionEnabled:<span class="literal">NO</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure></p><h4 id="获取app信息"><a href="#获取app信息" class="headerlink" title="获取app信息"></a>获取<code>app</code>信息</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app 信息字典</span></span><br><span class="line"><span class="built_in">NSDictionary</span> *infoDictionary = [[<span class="built_in">NSBundle</span> mainBundle] infoDictionary];</span><br><span class="line"><span class="comment">// app名称  </span></span><br><span class="line"><span class="built_in">NSString</span> *app_Name = [infoDictionary objectForKey:<span class="string">@"CFBundleDisplayName"</span>]; </span><br><span class="line"><span class="comment">// app版本  </span></span><br><span class="line"><span class="built_in">NSString</span> *app_Version = [infoDictionary objectForKey:<span class="string">@"CFBundleShortVersionString"</span>];  </span><br><span class="line"><span class="comment">// app build版本  </span></span><br><span class="line"><span class="built_in">NSString</span> *app_build = [infoDictionary objectForKey:<span class="string">@"CFBundleVersion"</span>]; </span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,infoDictionary);</span><br></pre></td></tr></table></figure><p>控制台输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    BuildMachineOSBuild = 17C88;</span><br><span class="line">    CFBundleDevelopmentRegion = &quot;zh_CN&quot;;</span><br><span class="line">    CFBundleDisplayName = &quot;app名称&quot;;</span><br><span class="line">    CFBundleDocumentTypes =     (</span><br><span class="line">                &#123;</span><br><span class="line">            CFBundleTypeIconFiles =             (</span><br><span class="line">                &quot;Icon-Small.png&quot;,</span><br><span class="line">                &quot;Icon.png&quot;</span><br><span class="line">            );</span><br><span class="line">            CFBundleTypeName = &quot;Aura Config&quot;;</span><br><span class="line">            CFBundleTypeRole = Viewer;</span><br><span class="line">            LSHandlerRank = Owner;</span><br><span class="line">            LSItemContentTypes =             (</span><br><span class="line">                &quot;com.aylanetworks.auraconfig&quot;</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">    CFBundleExecutable = Aura;</span><br><span class="line">    CFBundleIcons =     &#123;</span><br><span class="line">        CFBundlePrimaryIcon =         &#123;</span><br><span class="line">            CFBundleIconFiles =             (</span><br><span class="line">                AppIcon29x29,</span><br><span class="line">                AppIcon40x40,</span><br><span class="line">                AppIcon60x60</span><br><span class="line">            );</span><br><span class="line">            CFBundleIconName = AppIcon;</span><br><span class="line">            UIPrerenderedIcon = 1;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    CFBundleIdentifier = &quot;bundle identifier&quot;;</span><br><span class="line">    CFBundleInfoDictionaryVersion = &quot;6.0&quot;;</span><br><span class="line">    CFBundleName = Aura;</span><br><span class="line">    CFBundleNumericVersion = 50364416;</span><br><span class="line">    CFBundlePackageType = APPL;</span><br><span class="line">    CFBundleShortVersionString = &quot;1.0&quot;;</span><br><span class="line">    CFBundleSignature = &quot;????&quot;;</span><br><span class="line">    CFBundleSupportedPlatforms =     (</span><br><span class="line">        iPhoneOS</span><br><span class="line">    );</span><br><span class="line">    CFBundleURLTypes =     (</span><br><span class="line">                &#123;</span><br><span class="line">            CFBundleTypeRole = Editor;</span><br><span class="line">            CFBundleURLSchemes =             (</span><br><span class="line">                aylacontrol,</span><br><span class="line">                AgileLink,</span><br><span class="line">                AylaSmartPlug,</span><br><span class="line">                auracontrol</span><br><span class="line">            );</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            CFBundleTypeRole = Editor;</span><br><span class="line">            CFBundleURLSchemes =             (</span><br><span class="line">                &quot;com.googleusercontent.apps.654054971787-coh52to0m9qta3aoj0sjg224c5t4vg0r&quot;</span><br><span class="line">            );</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            CFBundleTypeRole = Editor;</span><br><span class="line">            CFBundleURLSchemes =             (</span><br><span class="line">                &quot;AylaNetworks.iOS-Aura&quot;</span><br><span class="line">            );</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            CFBundleTypeRole = Editor;</span><br><span class="line">            CFBundleURLSchemes =             (</span><br><span class="line">                wxe450e4ee1187148c</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">    CFBundleVersion = 3;</span><br><span class="line">    DTCompiler = &quot;com.apple.compilers.llvm.clang.1_0&quot;;</span><br><span class="line">    DTPlatformBuild = 15C107;</span><br><span class="line">    DTPlatformName = iphoneos;</span><br><span class="line">    DTPlatformVersion = &quot;11.2&quot;;</span><br><span class="line">    DTSDKBuild = 15C107;</span><br><span class="line">    DTSDKName = &quot;iphoneos11.2&quot;;</span><br><span class="line">    DTXcode = 0920;</span><br><span class="line">    DTXcodeBuild = 9C40b;</span><br><span class="line">    ITSAppUsesNonExemptEncryption = 0;</span><br><span class="line">    LSApplicationQueriesSchemes =     (</span><br><span class="line">        weixin</span><br><span class="line">    );</span><br><span class="line">    LSRequiresIPhoneOS = 1;</span><br><span class="line">    MinimumOSVersion = &quot;9.0&quot;;</span><br><span class="line">    NSAppTransportSecurity =     &#123;</span><br><span class="line">        NSAllowsArbitraryLoads = 1;</span><br><span class="line">        NSAllowsLocalNetworking = 1;</span><br><span class="line">    &#125;;</span><br><span class="line">    NSBluetoothPeripheralUsageDescription = &quot;Aura is requesting access to Bluetooth to manage nearby compatible devices.&quot;;</span><br><span class="line">    NSCameraUsageDescription = &quot;Aura would like to use your camera to scan the QR Code.&quot;;</span><br><span class="line">    NSLocationWhenInUseUsageDescription = &quot;Aura would like to use your location to fill the coordinates. Please allow the app to use your device&apos;s location services.&quot;;</span><br><span class="line">    UIAppFonts =     (</span><br><span class="line">        &quot;HelveticaNeue.ttc&quot;</span><br><span class="line">    );</span><br><span class="line">    UIDeviceFamily =     (</span><br><span class="line">        1</span><br><span class="line">    );</span><br><span class="line">    UILaunchImages =     (</span><br><span class="line">                &#123;</span><br><span class="line">            UILaunchImageMinimumOSVersion = &quot;11.0&quot;;</span><br><span class="line">            UILaunchImageName = &quot;LaunchImage-1100-Portrait-2436h&quot;;</span><br><span class="line">            UILaunchImageOrientation = Portrait;</span><br><span class="line">            UILaunchImageSize = &quot;&#123;375, 812&#125;&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            UILaunchImageMinimumOSVersion = &quot;8.0&quot;;</span><br><span class="line">            UILaunchImageName = &quot;LaunchImage-800-Portrait-736h&quot;;</span><br><span class="line">            UILaunchImageOrientation = Portrait;</span><br><span class="line">            UILaunchImageSize = &quot;&#123;414, 736&#125;&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            UILaunchImageMinimumOSVersion = &quot;8.0&quot;;</span><br><span class="line">            UILaunchImageName = &quot;LaunchImage-800-667h&quot;;</span><br><span class="line">            UILaunchImageOrientation = Portrait;</span><br><span class="line">            UILaunchImageSize = &quot;&#123;375, 667&#125;&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            UILaunchImageMinimumOSVersion = &quot;7.0&quot;;</span><br><span class="line">            UILaunchImageName = &quot;LaunchImage-700&quot;;</span><br><span class="line">            UILaunchImageOrientation = Portrait;</span><br><span class="line">            UILaunchImageSize = &quot;&#123;320, 480&#125;&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">            UILaunchImageMinimumOSVersion = &quot;7.0&quot;;</span><br><span class="line">            UILaunchImageName = &quot;LaunchImage-700-568h&quot;;</span><br><span class="line">            UILaunchImageOrientation = Portrait;</span><br><span class="line">            UILaunchImageSize = &quot;&#123;320, 568&#125;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">    UIMainStoryboardFile = Login;</span><br><span class="line">    UIRequiredDeviceCapabilities =     (</span><br><span class="line">        arm64</span><br><span class="line">    );</span><br><span class="line">    UISupportedInterfaceOrientations =     (</span><br><span class="line">        UIInterfaceOrientationPortrait</span><br><span class="line">    );</span><br><span class="line">    UTExportedTypeDeclarations =     (</span><br><span class="line">                &#123;</span><br><span class="line">            UTTypeConformsTo =             (</span><br><span class="line">                &quot;public.data&quot;</span><br><span class="line">            );</span><br><span class="line">            UTTypeDescription = &quot;Aura Config File&quot;;</span><br><span class="line">            UTTypeIdentifier = &quot;com.aylanetworks.auraconfig&quot;;</span><br><span class="line">            UTTypeTagSpecification =             &#123;</span><br><span class="line">                &quot;public.filename-extension&quot; = auraconfig;</span><br><span class="line">                &quot;public.mime-type&quot; = &quot;application/json&quot;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作不常用但可能需要&lt;code&gt;google&lt;/code&gt;的一些知识，整理总结一下，方便以后查找，本文收集的有4点：获取系统当前音量、&lt;code&gt;NSLog&lt;/code&gt;宏定义、修改app语言、获取app基础信息。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="笔记" scheme="https://tongfangyuan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>初学前端之CSS常用的几种选择器</title>
    <link href="https://tongfangyuan.github.io/2018/05/17/%E5%88%9D%E5%AD%A6%E5%89%8D%E7%AB%AF%E4%B9%8BCSS%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://tongfangyuan.github.io/2018/05/17/初学前端之CSS常用的几种选择器/</id>
    <published>2018-05-17T02:32:50.000Z</published>
    <updated>2018-06-07T13:16:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="id-选择器"><a href="#id-选择器" class="headerlink" title="id 选择器"></a>id 选择器</h2><h4 id="id选择器用-标识"><a href="#id选择器用-标识" class="headerlink" title="id选择器用#标识"></a>id选择器用<code>#</code>标识</h4><p>定义id为red的标签颜色为红色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#red</span>&#123;<span class="attribute">color</span>:red&#125;</span><br></pre></td></tr></table></figure><p>则下面的HTML代码<code>p</code>标签会被渲染成红色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span>这个段落是红色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><h4 id="类选择器用-来标识"><a href="#类选择器用-来标识" class="headerlink" title="类选择器用.来标识"></a>类选择器用<code>.</code>来标识</h4><p>定义一个位置居中的类选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.center</span>&#123;<span class="attribute">text-align</span>:center&#125;</span><br></pre></td></tr></table></figure><p>下面代码，中<code>h1</code>标签会居中显示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span>This heading will be center-aligned<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><h4 id="设置一些常见标签的样式"><a href="#设置一些常见标签的样式" class="headerlink" title="设置一些常见标签的样式"></a>设置一些常见标签的样式</h4><p>设置<code>h1</code>的字体大小为<code>12px</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;</span><br></pre></td></tr></table></figure></p><p>html代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>字体大小为12px<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;id-选择器&quot;&gt;&lt;a href=&quot;#id-选择器&quot; class=&quot;headerlink&quot; title=&quot;id 选择器&quot;&gt;&lt;/a&gt;id 选择器&lt;/h2&gt;&lt;h4 id=&quot;id选择器用-标识&quot;&gt;&lt;a href=&quot;#id选择器用-标识&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="前端" scheme="https://tongfangyuan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="https://tongfangyuan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>初学前端CSS小记一</title>
    <link href="https://tongfangyuan.github.io/2018/05/17/%E5%88%9D%E5%AD%A6%E5%89%8D%E7%AB%AF%E4%B9%8BCSS%E5%B0%8F%E8%AE%B0%E4%B8%80/"/>
    <id>https://tongfangyuan.github.io/2018/05/17/初学前端之CSS小记一/</id>
    <published>2018-05-17T02:32:50.000Z</published>
    <updated>2018-07-04T13:38:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="新手开发中遇到的问题-在这里总结一下-方便以后排查"><a href="#新手开发中遇到的问题-在这里总结一下-方便以后排查" class="headerlink" title="新手开发中遇到的问题,在这里总结一下,方便以后排查"></a>新手开发中遇到的问题,在这里总结一下,方便以后排查</h3></blockquote><h6 id="去掉button点击后的蓝框"><a href="#去掉button点击后的蓝框" class="headerlink" title="去掉button点击后的蓝框"></a>去掉<code>button</code>点击后的蓝框</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button &#123;</span><br><span class="line">outline:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="去掉button边框阴影"><a href="#去掉button边框阴影" class="headerlink" title="去掉button边框阴影"></a>去掉<code>button</code>边框阴影</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">button &#123;</span><br><span class="line">border:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="padding、margin、border-图解"><a href="#padding、margin、border-图解" class="headerlink" title="padding、margin、border 图解"></a>padding、margin、border 图解</h6><p><img src="https://i.stack.imgur.com/D9nU6.gif" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h3 id=&quot;新手开发中遇到的问题-在这里总结一下-方便以后排查&quot;&gt;&lt;a href=&quot;#新手开发中遇到的问题-在这里总结一下-方便以后排查&quot; class=&quot;headerlink&quot; title=&quot;新手开发中遇到的问题,在这里总结一下,方便以后排查&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="前端" scheme="https://tongfangyuan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="https://tongfangyuan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>初学前端CSS之a标签使用总结</title>
    <link href="https://tongfangyuan.github.io/2018/05/17/%E5%88%9D%E5%AD%A6%E5%89%8D%E7%AB%AF%E4%B9%8BCSS%E5%B0%8F%E8%AE%B0%E4%BA%8C/"/>
    <id>https://tongfangyuan.github.io/2018/05/17/初学前端之CSS小记二/</id>
    <published>2018-05-17T02:32:50.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="去掉下划线"><a href="#去掉下划线" class="headerlink" title="去掉下划线"></a>去掉下划线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a &#123;text-decoration:none;&#125;</span><br></pre></td></tr></table></figure><h3 id="设置每种状态下的属性"><a href="#设置每种状态下的属性" class="headerlink" title="设置每种状态下的属性"></a>设置每种状态下的属性</h3><p>链接未访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:link&#123;color:red&#125;</span><br></pre></td></tr></table></figure><p>链接已访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:visited&#123;color:blue&#125;</span><br></pre></td></tr></table></figure><p>获得焦点时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:active&#123;color:white&#125;</span><br></pre></td></tr></table></figure><p>鼠标移动到链接上时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:hover &#123;color:yellow&#125;</span><br></pre></td></tr></table></figure><h3 id="设置标签内文字垂直居中"><a href="#设置标签内文字垂直居中" class="headerlink" title="设置标签内文字垂直居中"></a>设置标签内文字垂直居中</h3><p>设置<code>line-height</code>和<code>a</code>标签高度一样即可</p><h3 id="设置a标签的宽高"><a href="#设置a标签的宽高" class="headerlink" title="设置a标签的宽高"></a>设置<code>a</code>标签的宽高</h3><p>因为<code>a</code>是内联标签,无法直接设置宽高,所以要想设置宽高将将其设置为块级元素即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#123;display: inline-block;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;去掉下划线&quot;&gt;&lt;a href=&quot;#去掉下划线&quot; class=&quot;headerlink&quot; title=&quot;去掉下划线&quot;&gt;&lt;/a&gt;去掉下划线&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="前端" scheme="https://tongfangyuan.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS" scheme="https://tongfangyuan.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 实现语音边录边传</title>
    <link href="https://tongfangyuan.github.io/2018/03/15/iOS%20%E5%AE%9E%E7%8E%B0%E8%AF%AD%E9%9F%B3%E8%BE%B9%E5%BD%95%E8%BE%B9%E4%BC%A0/"/>
    <id>https://tongfangyuan.github.io/2018/03/15/iOS 实现语音边录边传/</id>
    <published>2018-03-15T06:35:23.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>基本原理就是在用户开始录音的时候就与服务器建立连接,将音频数据分块传输,直到停止录音.<br>相比录音结束后上传整个音频数据,边录边传更省时间,从而提高用户体验.</p><a id="more"></a><h1 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h1><ol><li>开始录音,与服务器建立流上传连接</li><li>录音期间,将分块数据传输到服务器</li><li>录音结束并且所有数据传输完毕,关闭流连接</li><li>处理服务器返回的数据</li></ol><h2 id="与服务器建立连接"><a href="#与服务器建立连接" class="headerlink" title="与服务器建立连接"></a>与服务器建立连接</h2><p>用户开始录音时,建立流上传连接任务.在session调用<code>uploadTaskWithStreamedRequest:</code>后,系统会调用<code>URLSession:task:needNewBodyStream:</code> 代理方法获取输入流(<code>HTTPBodyStream</code>),通过输入流就可以向服务器上传分块数据</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSURLSessionConfiguration</span> *config = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</span><br><span class="line"><span class="built_in">NSURLSession</span> *session = [<span class="built_in">NSURLSession</span> sessionWithConfiguration:config];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化 request</span></span><br><span class="line"><span class="built_in">NSURL</span> *r_url = [<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://www.example.com"</span>];</span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:r_url];</span><br><span class="line">request.HTTPMethod = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建上传任务</span></span><br><span class="line"><span class="built_in">NSURLSessionUploadTask</span> *uploadTask = [session uploadTaskWithStreamedRequest:request];</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 任务执行</span></span><br><span class="line">[uploadTask resume];</span><br></pre></td></tr></table></figure><p>实现代理方法,传入输入流给<code>session</code><br>建立输入流的方式有两种:</p><ul><li>调用<code>NSStream</code>类方法<code>getBoundStreamsWithBufferSize:inputStream:outputStream:</code>得到两个绑定的流对象输入流(<code>inputStream</code>)和输出流(<code>outputStream</code>),当输出流写入数据的时候系统内部会将数据传递给输入流.</li><li>子类化<code>NSInputStream</code>(文后链接有介绍这种方法,原文作者推荐第一种方法,本文不重点讲解)</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session task:(<span class="built_in">NSURLSessionTask</span> *)task needNewBodyStream:(<span class="keyword">void</span> (^)(<span class="built_in">NSInputStream</span> * _Nullable))completionHandler</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSInputStream</span> *inputStream = <span class="literal">nil</span>;</span><br><span class="line">    <span class="built_in">NSOutputStream</span> *outputStream = <span class="literal">nil</span>;</span><br><span class="line">    [<span class="built_in">NSStream</span> getBoundStreamsWithBufferSize:<span class="number">1024</span> inputStream:&amp;inputStream outputStream:&amp;outputStream];</span><br><span class="line">    <span class="keyword">self</span>.bodyStream = inputStream;</span><br><span class="line">    <span class="keyword">self</span>.outputStream = outputStream;</span><br><span class="line">    <span class="keyword">self</span>.outputStream.delegate = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.outputStream scheduleInRunLoop:[<span class="built_in">NSRunLoop</span> currentRunLoop] forMode:<span class="built_in">NSDefaultRunLoopMode</span>];</span><br><span class="line">    [<span class="keyword">self</span>.outputStream open];</span><br><span class="line">    completionHandler(<span class="keyword">self</span>.bodyStream);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据分块上传到服务器"><a href="#数据分块上传到服务器" class="headerlink" title="数据分块上传到服务器"></a>数据分块上传到服务器</h2><p>传输分块数据,写入分块数据是在<code>stream:handleEvent:</code>方法处理的,上文有设置输出流代理并且开启,每当有数据可以写入的时候,就会代用代理方法.</p><ul><li><code>NSStreamEventHasSpaceAvailable</code>事件表示有新数据可以写入,输入流写入数据方法<code>write:maxLength:</code></li><li>当用户停止录音并且所有数据写入完成之后,我们需要关闭输出流和将其代理置空.如果不关闭流,可能会出现连接超时,数据传输失败.</li><li>所有数据是否写入完成需要结合具体场景来判断</li><li>关于输入流输出流如何使用,请参考苹果给的demo</li><li>下面是伪代码</li></ul><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)stream:(<span class="built_in">NSStream</span> *)aStream handleEvent:(<span class="built_in">NSStreamEvent</span>)eventCode</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (eventCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventNone</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventNone"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventOpenCompleted</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventOpenCompleted"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventHasBytesAvailable</span>: &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventHasBytesAvailable"</span>);</span><br><span class="line">        &#125; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventHasSpaceAvailable</span>: &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventHasBytesAvailable"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 录音中且有新数据需要写入,输入流写入数据</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 录音中没有新数据,等待新数据进入</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 录音停止,数据未写完</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 录音停止,所有数据未写完,关闭输入流,设置输入流代理为nil</span></span><br><span class="line"></span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventErrorOccurred</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventErrorOccurred"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">NSStreamEventEndEncountered</span>:</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"NSStreamEventEndEncountered"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理服务器响应数据"><a href="#处理服务器响应数据" class="headerlink" title="处理服务器响应数据"></a>处理服务器响应数据</h2><p>要获取服务器返回的数据需要结合下面的代理方法:</p><ol><li><code>URLSession:dataTask:didReceiveResponse:completionHandler:</code></li><li><code>URLSession:dataTask:didReceiveData:</code> 如果服务器返回的数据量大，比如包含二进制音频视频等，会分段接收</li><li><code>URLSession:task:didCompleteWithError:</code>所有数据接收完成后会调用改方法</li></ol><p>实现第一个代理方法的<code>completionHandler</code>,才会调用第二个代理拿到服务器数据<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session</span><br><span class="line">          dataTask:(<span class="built_in">NSURLSessionDataTask</span> *)dataTask</span><br><span class="line">didReceiveResponse:(<span class="built_in">NSURLResponse</span> *)response</span><br><span class="line"> completionHandler:(<span class="keyword">void</span> (^)(<span class="built_in">NSURLSessionResponseDisposition</span> disposition))completionHandler</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (urlResponse.statusCode &gt;= <span class="number">200</span> || urlResponse.statusCode &lt;= <span class="number">299</span>) &#123;</span><br><span class="line">        <span class="built_in">NSHTTPURLResponse</span> *urlResponse = (<span class="built_in">NSHTTPURLResponse</span> *)response;</span><br><span class="line">   completionHandler(<span class="built_in">NSURLSessionResponseAllow</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接收服务器响应数据</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session dataTask:(<span class="built_in">NSURLSessionDataTask</span> *)dataTask</span><br><span class="line">    didReceiveData:(<span class="built_in">NSData</span> *)data &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSHTTPURLResponse</span> *res = (<span class="built_in">NSHTTPURLResponse</span> *)dataTask.response;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Send audio status code：%d"</span>, (<span class="keyword">int</span>)res.statusCode);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.streamUploadTask == dataTask) &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="comment">// 拼接数据</span></span><br><span class="line">        [<span class="keyword">self</span>.streamReceiveData appendData:data];</span><br><span class="line"></span><br><span class="line">    &#125;  <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他任务响应数据</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据处理<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)URLSession:(<span class="built_in">NSURLSession</span> *)session</span><br><span class="line">              task:(<span class="built_in">NSURLSessionTask</span> *)task</span><br><span class="line">didCompleteWithError:(<span class="keyword">nullable</span> <span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.streamUploadTask==task) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!error) &#123;</span><br><span class="line">            <span class="comment">// 数据处理</span></span><br><span class="line">        &#125; </span><br><span class="line">        </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><p><a href="https://forums.developer.apple.com/thread/76675" target="_blank" rel="noopener">How to stream upload recorder audio as multipart message to a http/2 endpoint</a><br><a href="https://developer.apple.com/library/content/samplecode/SimpleURLConnections/Introduction/Intro.html" target="_blank" rel="noopener">NSStream Demo</a><br><a href="https://tongfangyuan.github.io/2018/03/15/iOS%20实现语音边录边传">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基本原理就是在用户开始录音的时候就与服务器建立连接,将音频数据分块传输,直到停止录音.&lt;br&gt;相比录音结束后上传整个音频数据,边录边传更省时间,从而提高用户体验.&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="边录边传 NSStream" scheme="https://tongfangyuan.github.io/tags/%E8%BE%B9%E5%BD%95%E8%BE%B9%E4%BC%A0-NSStream/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习笔记</title>
    <link href="https://tongfangyuan.github.io/2017/11/24/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://tongfangyuan.github.io/2017/11/24/MySQL学习笔记/</id>
    <published>2017-11-24T06:35:23.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><ul><li><p>新增数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create Database tp5</span><br></pre></td></tr></table></figure></li><li><p>查看数据库,查看将要创建的数据库是否存在</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW tp5</span><br></pre></td></tr></table></figure><ul><li>选择数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE tp5</span><br></pre></td></tr></table></figure><ul><li>删除数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE tp5</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h1><ul><li><p>创建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">`id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT &apos;主键&apos;,</span><br><span class="line">`name` varchar(40) NOT NULL COMMENT &apos;用户名&apos;,</span><br><span class="line">`headurl` varchar(100) DEFAULT NULL COMMENT &apos;头像地址&apos;,</span><br><span class="line">`tel` varchar(11) DEFAULT NULL COMMENT &apos;电话&apos;,</span><br><span class="line">`createtime` varchar(11) DEFAULT NULL COMMENT &apos;注册时间&apos;,</span><br><span class="line">`password` varchar(40) DEFAULT NULL COMMENT &apos;密码&apos;,</span><br><span class="line">`age` int(3) DEFAULT NULL,</span><br><span class="line">PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4</span><br></pre></td></tr></table></figure></li><li><p>新增一条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `user` (`name`,`password`,`tel`,`age`)</span><br><span class="line">VALUES (&apos;数据&apos;,&apos;21232f297a57a5a743894a0e4a801fc3&apos;,&apos;18611488388&apos;,&apos;39&apos;);</span><br></pre></td></tr></table></figure></li><li><p>新增多条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `user` (`name`,`password`,`tel`,`age`)</span><br><span class="line">VALUES (&apos;胡鹏&apos;,&apos;21232f297a57a5a743894a0e4a801fc3&apos;,&apos;18842438941&apos;,&apos;23&apos;),</span><br><span class="line">(&apos;张新&apos;,&apos;21232f297a57a5a743894a0e4a801fc3&apos;,&apos;18842734041&apos;,&apos;22&apos;),</span><br><span class="line">(&apos;杨成&apos;,&apos;21232f297a57a5a743894a0e4a801fc3&apos;,&apos;18842437041&apos;,&apos;24&apos;);</span><br></pre></td></tr></table></figure></li><li><p>查询用户表中所有用户数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `user`</span><br></pre></td></tr></table></figure></li><li><p>查询user表中,所有用户的手机号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT tel from `user`</span><br></pre></td></tr></table></figure></li><li><p>查询用户id为5的用户数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from `user` WHERE id=5</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于16的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user where age&gt;16</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于20小于40的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user where age&gt;20 and age&lt;40</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于20小于40的前5个用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user where age&gt;20 and age&lt;40 LIMIT 5</span><br></pre></td></tr></table></figure></li><li><p>显示年龄最小的五个人</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user where age&gt;0 order by age  asc limit 5</span><br></pre></td></tr></table></figure></li><li><p>查询年龄大于20小于40的用户的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name from user where age&gt;20 and age&lt;40</span><br></pre></td></tr></table></figure></li><li><p>所有用户按照age从小到大排序 desc降序 asc升序排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user order by age desc</span><br></pre></td></tr></table></figure></li><li><p>查询age为null的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user where age is NULL</span><br></pre></td></tr></table></figure></li><li><p>查询年龄唯一的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT age FROM `user`</span><br></pre></td></tr></table></figure></li></ul><h4 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h4><ul><li><p>查询商品表中哪些用户购买过商品，并将用户信息显示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT user.id,user.name,order_goods.name</span><br><span class="line">from user,order_goods</span><br><span class="line">where order_goods.uid=user.id</span><br></pre></td></tr></table></figure></li><li><p>查询胡鹏买了哪些商品</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT user.id as uid,user.name as username,order_goods.name as shopname,order_goods.id as oid</span><br><span class="line">from user,order_goods</span><br><span class="line">where order_goods.uid=user.id</span><br><span class="line">and user.name=&apos;胡鹏&apos;</span><br></pre></td></tr></table></figure></li><li><p>左连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user</span><br><span class="line">left join order_goods</span><br><span class="line">on user.id=order_goods.uid</span><br></pre></td></tr></table></figure></li><li><p>右连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user</span><br><span class="line">right join order_goods</span><br><span class="line">on user.id=order_goods.uid</span><br></pre></td></tr></table></figure></li></ul><h4 id="子查询-用于子查询的关键字包括in、not-in、-、-、exists、not-exists等"><a href="#子查询-用于子查询的关键字包括in、not-in、-、-、exists、not-exists等" class="headerlink" title="子查询,用于子查询的关键字包括in、not in、=、!=、exists、not exists等"></a>子查询,用于子查询的关键字包括in、not in、=、!=、exists、not exists等</h4><ul><li><p>查询uid为 5,8,15,17的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from user</span><br><span class="line">where user.id in (5,8,15,17)</span><br></pre></td></tr></table></figure></li><li><p>查询购买过商品的用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from user</span><br><span class="line">where id in (select uid from order_goods)</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用-update-语句进行记录更新"><a href="#使用-update-语句进行记录更新" class="headerlink" title="使用 update 语句进行记录更新"></a>使用 update 语句进行记录更新</h4><ul><li><p>名称为’数据’的用户改名为叶尚乐</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET name=&apos;叶尚乐&apos; where name=&apos;数据&apos;</span><br></pre></td></tr></table></figure></li><li><p>将叶尚乐age修改为25,手机号码修改为17605087708</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user set age=25,tel=17605087708 where name=&apos;叶尚乐&apos;</span><br></pre></td></tr></table></figure></li><li><p>将id为20的用户age减一岁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set age=age-1 where id=20;</span><br></pre></td></tr></table></figure></li><li><p>删除user表中年龄为空的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM user where age is NULL</span><br></pre></td></tr></table></figure></li><li><p>删除id不为17的胡鹏用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM user where id!=17 and name=&apos;胡鹏&apos;</span><br></pre></td></tr></table></figure></li></ul><h2 id="切记"><a href="#切记" class="headerlink" title="切记"></a>切记</h2><ul><li style="list-style: none"><input type="checkbox"> 删除时一定要记住加上where条件，不然会清空掉整个表的记录。</li><li style="list-style: none"><input type="checkbox"> 删除重要数据前一定要备份、备份、备份。</li></ul><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ul><li style="list-style: none"><input type="checkbox" checked> <a href="http://mysql.phpxy.com/146038" target="_blank" rel="noopener">3天入门MySQL</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据库操作&quot;&gt;&lt;a href=&quot;#数据库操作&quot; class=&quot;headerlink&quot; title=&quot;数据库操作&quot;&gt;&lt;/a&gt;数据库操作&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新增数据库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create Database tp5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看数据库,查看将要创建的数据库是否存在&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW tp5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;选择数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;USE tp5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DROP DATABASE tp5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="https://tongfangyuan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="MySQL" scheme="https://tongfangyuan.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之在 linux 中搭建 Git服务器</title>
    <link href="https://tongfangyuan.github.io/2017/09/11/%E9%98%BF%E9%87%8C%E4%BA%91%E4%B9%8B%E5%9C%A8%20linux%20%E4%B8%AD%E6%90%AD%E5%BB%BA%20Git%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://tongfangyuan.github.io/2017/09/11/阿里云之在 linux 中搭建 Git服务器/</id>
    <published>2017-09-11T02:35:33.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提声明"><a href="#前提声明" class="headerlink" title="前提声明"></a>前提声明</h2><ul><li>macOS 10.11.6 操作系统</li><li>SSH 连接使用的是 <code>终端</code> 软件</li><li>您已经在阿里云购买了<code>云服务器 ECS</code></li></ul><a id="more"></a><h2 id="SSH-连接云服务器ESC"><a href="#SSH-连接云服务器ESC" class="headerlink" title="SSH 连接云服务器ESC"></a>SSH 连接云服务器ESC</h2><p>输入连接命令</p><p><code>ssh -l root ip地址</code></p><p>终端会提示输入密码</p><p><code>root@ip地址&#39;s password:</code></p><p>登录成功提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Last failed login: Wed Sep  6 09:54:27 CST 2017 from 140.205.225.187 on ssh:notty</span><br><span class="line">There were 8 failed login attempts since the last successful login.</span><br><span class="line">Last login: Wed Sep  6 09:38:10 2017 from 27.154.170.163</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br></pre></td></tr></table></figure><h2 id="开始搭建-Git-服务器"><a href="#开始搭建-Git-服务器" class="headerlink" title="开始搭建 Git 服务器"></a>开始搭建 <code>Git</code> 服务器</h2><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 <code>git</code></h3><p>在 <code>linux</code> 上安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git</span><br></pre></td></tr></table></figure><p>在 <code>Mac</code> 上安装</p><p>在 <code>Mac</code> 上安装 <code>Git</code> 有多种方式。</p><p>最简单的方法是安装 <code>Xcode Command Line Tools。 Mavericks （10.9）</code> 或更高版本的系统中，在 <code>Terminal</code> 里尝试首次运行 <code>git</code> 命令即可。 如果没有安装过命令行开发者工具，将会提示你安装。</p><p>如果你想安装更新的版本，可以使用二进制安装程序。 官方维护的 <code>OSX Git</code> 安装程序可以在 <code>Git</code> 官方网站下载，网址为 <a href="http://git-scm.com/download/mac。" target="_blank" rel="noopener">http://git-scm.com/download/mac。</a></p><p><img src="https://git-scm.com/book/en/v2/images/git-osx-installer.png" alt="图片"></p><p><code>Figure 7. Git OS X</code> 安装程序.</p><p>你也可以将它作为 <code>GitHub for Mac</code> 的一部分来安装。 它们的图形化 <code>Git</code> 工具有一个安装命令行工具的选项。 你可以从 <code>GitHub for Mac</code> 网站下载该工具，网址为 <a href="http://mac.github.com。" target="_blank" rel="noopener">http://mac.github.com。</a></p><p>查看当前 <code>Git</code> 版本</p><p>输入命令 <code>git --version</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z htdocs]# git --version</span><br><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">Git 安装</a></p><p><a href="https://blog.argcv.com/articles/2078.c" target="_blank" rel="noopener">Git 部署代码到服务器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前提声明&quot;&gt;&lt;a href=&quot;#前提声明&quot; class=&quot;headerlink&quot; title=&quot;前提声明&quot;&gt;&lt;/a&gt;前提声明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;macOS 10.11.6 操作系统&lt;/li&gt;
&lt;li&gt;SSH 连接使用的是 &lt;code&gt;终端&lt;/code&gt; 软件&lt;/li&gt;
&lt;li&gt;您已经在阿里云购买了&lt;code&gt;云服务器 ECS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="后端" scheme="https://tongfangyuan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="https://tongfangyuan.github.io/tags/linux/"/>
    
      <category term="Git" scheme="https://tongfangyuan.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>阿里云之在 linux 下集成 XAMPP 环境</title>
    <link href="https://tongfangyuan.github.io/2017/09/07/%E9%98%BF%E9%87%8C%E4%BA%91%E4%B9%8B%E5%9C%A8%20linux%20%E4%B8%8B%E9%9B%86%E6%88%90%20XAMPP%20%E7%8E%AF%E5%A2%83/"/>
    <id>https://tongfangyuan.github.io/2017/09/07/阿里云之在 linux 下集成 XAMPP 环境/</id>
    <published>2017-09-07T02:38:08.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提声明"><a href="#前提声明" class="headerlink" title="前提声明"></a>前提声明</h2><ul><li>macOS 10.11.6 操作系统</li><li>SSH 连接使用的是 <code>终端</code> 软件</li><li>您已经在阿里云购买了<code>云服务器 ECS</code></li></ul><a id="more"></a><h2 id="SSH-连接云服务器ESC"><a href="#SSH-连接云服务器ESC" class="headerlink" title="SSH 连接云服务器ESC"></a>SSH 连接云服务器ESC</h2><p>输入连接命令</p><p><code>ssh -l root ip地址</code></p><p>终端会提示输入密码</p><p><code>root@ip地址&#39;s password:</code></p><p>登录成功提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Last failed login: Wed Sep  6 09:54:27 CST 2017 from 140.205.225.187 on ssh:notty</span><br><span class="line">There were 8 failed login attempts since the last successful login.</span><br><span class="line">Last login: Wed Sep  6 09:38:10 2017 from 27.154.170.163</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br></pre></td></tr></table></figure><h2 id="开始集成-XAMPP"><a href="#开始集成-XAMPP" class="headerlink" title="开始集成 XAMPP"></a>开始集成 XAMPP</h2><h3 id="查看-linux-系统位数"><a href="#查看-linux-系统位数" class="headerlink" title="查看 linux 系统位数"></a>查看 linux 系统位数</h3><p>在终端输入<br><code>uname -a</code></p><ul><li><p>x86_64则说明你是64位内核, 跑的是64位的系统.</p></li><li><p>i386, i686说明你是32位的内核, 跑的是32位的系</p></li></ul><p>笔者是64位系统的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z ~]# uname -a</span><br><span class="line">Linux izwz91cf36dj3iegmw8gp9z 3.10.0-514.6.2.el7.x86_64 #1 SMP Thu Feb 23 03:04:39 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure></p><h3 id="下载-XAMPP-安装包"><a href="#下载-XAMPP-安装包" class="headerlink" title="下载 XAMPP 安装包"></a>下载 XAMPP 安装包</h3><p><a href="https://www.apachefriends.org/zh_cn/download.html" target="_blank" rel="noopener">下载地址1</a> or <a href="http://sourceforge.net/projects/xampp/files/XAMPP%20Linux/1.8.3/" target="_blank" rel="noopener">下载地址2</a>,根据<code>linux</code>系统位数下载</p><p>下载前,请先进入<code>opt</code>文件夹,不然下载完之后我们不知道文件下载到哪里去了</p><p>回到根目录<code>cd /</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z ~]#  cd /</span><br></pre></td></tr></table></figure></p><p>查看所有文件夹<code>ls</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z /]# ls</span><br><span class="line">bin   dev  home  lib64       media  opt   root  sbin  sys  usr</span><br><span class="line">boot  etc  lib   lost+found  mnt    proc  run   srv   tmp  var</span><br></pre></td></tr></table></figure></p><p>进入<code>opt</code>文件夹 <code>cd opt</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z /]# cd opt</span><br></pre></td></tr></table></figure></p><p>下载文件<code>wget 地址</code>(笔者下载的是 PHP 版本5.6.31 64位的)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.apachefriends.org/xampp-files/5.6.31/xampp-linux-x64-5.6.31-0-installer.run</span><br></pre></td></tr></table></figure></p><p>如果提示证书错误,使用下面的命令<code>wget --no-check-certificate 地址</code></p><p>下载是个漫长的过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz91cf36dj3iegmw8gp9z opt]# wget https://www.apachefriends.org/xampp-files/5.6.31/xampp-linux-x64-5.6.31-0-installer.run</span><br><span class="line"></span><br><span class="line">--2017-09-06 10:06:04--  https://www.apachefriends.org/xampp-files/5.6.31/xampp-linux-x64-5.6.31-0-installer.run</span><br><span class="line">正在解析主机 www.apachefriends.org (www.apachefriends.org)... 107.22.247.161</span><br><span class="line">正在连接 www.apachefriends.org (www.apachefriends.org)|107.22.247.161|:443... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 302 Found</span><br><span class="line">位置：https://downloadsapachefriends.global.ssl.fastly.net/xampp-files/5.6.31/xampp-linux-x64-5.6.31-0-installer.run?from_af=true [跟随至新的 URL]</span><br><span class="line">--2017-09-06 10:06:05--  https://downloadsapachefriends.global.ssl.fastly.net/xampp-files/5.6.31/xampp-linux-x64-5.6.31-0-installer.run?from_af=true</span><br><span class="line">正在解析主机 downloadsapachefriends.global.ssl.fastly.net (downloadsapachefriends.global.ssl.fastly.net)... 151.101.72.249</span><br><span class="line">正在连接 downloadsapachefriends.global.ssl.fastly.net (downloadsapachefriends.global.ssl.fastly.net)|151.101.72.249|:443... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">长度：142484765 (136M) [binary/octet-stream]</span><br><span class="line">正在保存至: “xampp-linux-x64-5.6.31-0-installer.run”</span><br><span class="line"></span><br><span class="line">100%[======================================&gt;] 142,484,765  105KB/s 用时 30m 16s</span><br><span class="line"></span><br><span class="line">2017-09-06 10:36:23 (76.6 KB/s) - 已保存 “xampp-linux-x64-5.6.31-0-installer.run” [142484765/142484765])</span><br></pre></td></tr></table></figure></p><h3 id="给文件-755-权限"><a href="#给文件-755-权限" class="headerlink" title="给文件 755 权限"></a>给文件 755 权限</h3><p><code>chmod -R 755 xampp-linux-x64-5.6.31-0-installer.run</code></p><h3 id="运行安装软件"><a href="#运行安装软件" class="headerlink" title="运行安装软件"></a>运行安装软件</h3><p><code>./xampp-linux-x64-5.6.31-0-installer.run</code></p><p>安装提示不用管,一路回车即可</p><p>XAMPP 会被安装在<code>/opt/lampp</code>目录下</p><h3 id="安装完毕-启动-XAMPP-服务"><a href="#安装完毕-启动-XAMPP-服务" class="headerlink" title="安装完毕,启动 XAMPP 服务"></a>安装完毕,启动 XAMPP 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/lampp/lampp start</span><br></pre></td></tr></table></figure><p>启动成功提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Starting XAMPP for Linux 5.6.31-0...</span><br><span class="line">XAMPP: Starting Apache...already running.</span><br><span class="line">XAMPP: Starting MySQL...ok.</span><br><span class="line">XAMPP: Starting ProFTPD...ok.</span><br></pre></td></tr></table></figure></p><h3 id="设置-XAMPP-服务随系统启动"><a href="#设置-XAMPP-服务随系统启动" class="headerlink" title="设置 XAMPP 服务随系统启动"></a>设置 XAMPP 服务随系统启动</h3><p>输入以下命令<br><code>ln -s /opt/lampp/lampp /etc/rc.d/rc3.d/S99lampp</code></p><p><code>ln -s /opt/lampp/lampp /etc/rc.d/rc4.d/S99lampp</code></p><p><code>ln -s /opt/lampp/lampp /etc/rc.d/rc5.d/S99lampp</code></p><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><h4 id="设置的密码一定要用文本的形式保存好"><a href="#设置的密码一定要用文本的形式保存好" class="headerlink" title="设置的密码一定要用文本的形式保存好"></a><code>设置的密码一定要用文本的形式保存好</code></h4><p>环境安装完了,但是<code>MySQL</code>的密码是多少,<code>ftp</code>的账号密码也是多少,我们不知道,这个默认为空,还需要我们自己设置.</p><p>输入命令<code>sudo /opt/lampp/lampp security</code></p><p>如果<code>msql</code>开着,会提示你先关闭,然后才会提示设置密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">XAMPP:  Quick security check...</span><br><span class="line">XAMPP:  MySQL is accessable via network.</span><br><span class="line">XAMPP: Normaly that&apos;s not recommended. Do you want me to turn it off? [yes] yes</span><br><span class="line">XAMPP:  Turned off.</span><br><span class="line">XAMPP: Stopping MySQL...ok.</span><br><span class="line">XAMPP: Starting MySQL...ok.</span><br></pre></td></tr></table></figure></p><p>提示你设置<code>phpMyAdmin</code>密码(账户名为<code>pma</code>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">XAMPP:  The MySQL/phpMyAdmin user pma has no password set!!!</span><br><span class="line">XAMPP: Do you want to set a password? [yes] yes</span><br><span class="line">XAMPP: Password:</span><br></pre></td></tr></table></figure><p>提示设置<code>msql</code>密码(账户名为<code>root</code>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XAMPP:  MySQL has no root passwort set!!!</span><br><span class="line">XAMPP: Do you want to set a password? [yes] yes</span><br><span class="line">XAMPP:  Write the password somewhere down to make sure you won&apos;t forget it!!!</span><br><span class="line">XAMPP: Password:</span><br></pre></td></tr></table></figure><p>提示设置<code>FTP</code>密码(用户名为<code>daemon</code>默认端口<code>21</code>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XAMPP:  The FTP password for user &apos;daemon&apos; is still set to &apos;xampp&apos;.</span><br><span class="line">XAMPP: Do you want to change the password? [yes] yes</span><br></pre></td></tr></table></figure><p>设置完成后,在浏览器输入服务器的<code>ip</code>地址,应该是可以访问的</p><h3 id="设置XAMPP可以远程访问"><a href="#设置XAMPP可以远程访问" class="headerlink" title="设置XAMPP可以远程访问"></a>设置<code>XAMPP</code>可以远程访问</h3><p>输入命令<code>vi /opt/lampp/etc/extra/httpd-xampp.conf</code></p><p>将<code>Require local</code>改成<code>Require  all granted</code></p><p><code>/opt/lampp/lampp restart</code>重启<code>xampp</code></p><p>到此<code>xampp</code>安装完成</p><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><p><a href="http://tongfy.top/blog/2017/09/07/a-li-yun-zhi-zai-linux-xia-ji-cheng-xampp-huan-jing/" target="_blank" rel="noopener">原文链接</a></p><p><a href="https://zh.wikipedia.org/wiki/XAMPP" target="_blank" rel="noopener">XAMPP</a></p><p><a href="http://www.cnblogs.com/ygyg/p/5395207.html" target="_blank" rel="noopener">linux下xampp集成包安装配置方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前提声明&quot;&gt;&lt;a href=&quot;#前提声明&quot; class=&quot;headerlink&quot; title=&quot;前提声明&quot;&gt;&lt;/a&gt;前提声明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;macOS 10.11.6 操作系统&lt;/li&gt;
&lt;li&gt;SSH 连接使用的是 &lt;code&gt;终端&lt;/code&gt; 软件&lt;/li&gt;
&lt;li&gt;您已经在阿里云购买了&lt;code&gt;云服务器 ECS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="后端" scheme="https://tongfangyuan.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="XAMPP" scheme="https://tongfangyuan.github.io/tags/XAMPP/"/>
    
      <category term="PHP" scheme="https://tongfangyuan.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>scroll-view横向滚动</title>
    <link href="https://tongfangyuan.github.io/2017/08/25/scroll-view%E6%A8%AA%E5%90%91%E6%BB%9A%E5%8A%A8/"/>
    <id>https://tongfangyuan.github.io/2017/08/25/scroll-view横向滚动/</id>
    <published>2017-08-25T06:35:23.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习小程序开发,遇到<code>scroll-view</code>横向滚动不了的问题,google之后解决了问题,下面记录一下</p><a id="more"></a><h3 id="项目中遇到的问题"><a href="#项目中遇到的问题" class="headerlink" title="项目中遇到的问题"></a>项目中遇到的问题</h3><p>不符合需求的布局效果图(/desktop/note/scroll-view1.jpeg)</p><p>wxml文件代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 未来48小时天气预报 --&gt;</span><br><span class="line">&lt;view class=&quot;hours-container&quot;&gt;</span><br><span class="line">&lt;view class=&quot;hours-section&quot;&gt;未来48小时天气预报&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;line-hor&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;scroll-view class=&quot;scroll-view_H&quot; scroll-x=&quot;true&quot;&gt;</span><br><span class="line">&lt;block wx:for=&quot;&#123;&#123;[1,2,3,4,5,6,7,8]&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;view class=&quot;hours-item&quot;&gt;</span><br><span class="line">未来48小时天气预报</span><br><span class="line">&lt;view class=&quot;line-ver disp-inlineBlock&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/block&gt;</span><br><span class="line">&lt;/scroll-view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure></p><p>wxss文件代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.hours-item &#123;</span><br><span class="line">background-color: white;</span><br><span class="line">&#125;</span><br><span class="line">.scroll-view_H &#123;</span><br><span class="line">white-space: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>给<code>hours-item</code>添加<code>display: inline-block;</code>样式就好了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学习小程序开发,遇到&lt;code&gt;scroll-view&lt;/code&gt;横向滚动不了的问题,google之后解决了问题,下面记录一下&lt;/p&gt;
    
    </summary>
    
      <category term="小程序" scheme="https://tongfangyuan.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="scroll-view" scheme="https://tongfangyuan.github.io/tags/scroll-view/"/>
    
  </entry>
  
  <entry>
    <title>关于WebSocket实践记录</title>
    <link href="https://tongfangyuan.github.io/2017/08/17/%E5%85%B3%E4%BA%8EWebSocket%E5%AE%9E%E8%B7%B5%E8%AE%B0%E5%BD%95/"/>
    <id>https://tongfangyuan.github.io/2017/08/17/关于WebSocket实践记录/</id>
    <published>2017-08-17T06:35:23.000Z</published>
    <updated>2018-06-07T13:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于公司有直播方面的业务,直播肯定需要弹幕功能,google了一番发现Websocket可以实现实时弹幕功能,然后在GitHub上发现了Facebook家的第三方框架SocketRocket,实现了弹幕功能.</p><a id="more"></a><h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><blockquote><p>WebSocket一种在单个 TCP 连接上进行全双工通讯的协议。WebSocket通信协议于2011年被IETF定为标准RFC 6455，并被RFC7936所补充规范。WebSocket API也被W3C定为标准。<br>WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。</p></blockquote><p><a href="https://zh.wikipedia.org/wiki/WebSocket" target="_blank" rel="noopener">WebSocket 维基百科</a></p><h2 id="SocketRocket"><a href="#SocketRocket" class="headerlink" title="SocketRocket"></a>SocketRocket</h2><p>SocketRocket 是一个符合WebSocket协议的用于iOS, macOS, tvOS的第三方开发框架,能够增加我们开发效率.</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>同时支持IPv4/IPv6</li><li>支持SSL证书</li><li>似乎性能还不错</li><li>支持TLS (wss)</li><li>支持HTTP代理</li><li>异步工作,大部分操作都在一个后台线程完成的并且不会阻塞</li></ul><h3 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h3><p>CocoaPods集成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &apos;SocketRocket&apos;</span><br></pre></td></tr></table></figure></p><h2 id="SocketRocket-API"><a href="#SocketRocket-API" class="headerlink" title="SocketRocket API"></a>SocketRocket API</h2><h3 id="SocketRocket类"><a href="#SocketRocket类" class="headerlink" title="SocketRocket类"></a>SocketRocket类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@interface SRWebSocket : NSObject</span><br><span class="line"></span><br><span class="line">// 初始化方法</span><br><span class="line">- (instancetype)initWithURLRequest:(NSURLRequest *)request;</span><br><span class="line"></span><br><span class="line">// 代理需要在连接之前设置</span><br><span class="line">@property (nonatomic, weak) id &lt;SRWebSocketDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line">// 开始连接</span><br><span class="line">- (void)open;</span><br><span class="line"></span><br><span class="line">// 关闭连接</span><br><span class="line">- (void)close;</span><br><span class="line">- (void)closeWithCode:(NSInteger)code reason:(NSString *)reason;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 发送数据</span><br><span class="line">- (void)send:(id)data;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><h3 id="SRWebSocketDelegate"><a href="#SRWebSocketDelegate" class="headerlink" title="SRWebSocketDelegate"></a>SRWebSocketDelegate</h3><p>项目中需要实现的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@protocol SRWebSocketDelegate &lt;NSObject&gt;</span><br><span class="line"></span><br><span class="line">@optional</span><br><span class="line"></span><br><span class="line">// 连接成功回调</span><br><span class="line">- (void)webSocketDidOpen:(SRWebSocket *)webSocket;</span><br><span class="line"></span><br><span class="line">// 接收到消息</span><br><span class="line">- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessageWithString:(NSString *)string;</span><br><span class="line">// 接收到二进制数据</span><br><span class="line">- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessageWithData:(NSData *)data;</span><br><span class="line"></span><br><span class="line">// 连接失败错误信息回调</span><br><span class="line">- (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error;</span><br><span class="line"></span><br><span class="line">// 关闭连接以及错误码回调</span><br><span class="line">- (void)webSocket:(SRWebSocket *)webSocket didCloseWithCode:(NSInteger)code reason:(nullable NSString *)reason wasClean:(BOOL)wasClean;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure></p><h3 id="项目中的实践"><a href="#项目中的实践" class="headerlink" title="项目中的实践"></a>项目中的实践</h3><p>在连接成功之后发送用户信息(json字符串)给服务器(相当于登录)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (void)webSocketDidOpen:(SRWebSocket *)webSocket</span><br><span class="line">&#123;</span><br><span class="line">NSLog(@&quot;连接成功webSocketDidOpen:%@&quot;,webSocket);</span><br><span class="line">[self outputString:[NSString stringWithFormat:@&quot;连接成功webSocketDidOpen:%@&quot;,webSocket] type:1];</span><br><span class="line">[self outputString:[NSString stringWithFormat:@&quot;连接地址:%@&quot;,webSocket.url.absoluteString] type:1];</span><br><span class="line">self.closeButton.enabled = YES;</span><br><span class="line"></span><br><span class="line">// 连接上之后,发送登录信息</span><br><span class="line">//    &#123;&quot;type&quot;:&quot;login&quot;,&quot;uid&quot;:&quot;1&quot;,&quot;topic_id&quot;:&quot;bhy7zsa1f9&quot;&#125;</span><br><span class="line">[self.socket send:@&quot;&#123;\&quot;type\&quot;:\&quot;login\&quot;,\&quot;uid\&quot;:\&quot;1\&quot;,\&quot;topic_id\&quot;:\&quot;bhy7zsa1f9\&quot;&#125;&quot;];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接收服务器发送的数据type为<code>ping</code>的数据客户端需要回复<code>pong</code>,来维持长连接,这个是和后台商量定下来的.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message</span><br><span class="line">&#123;</span><br><span class="line">[self outputString:message type:1];</span><br><span class="line">NSLog(@&quot;%@&quot;,message);</span><br><span class="line"></span><br><span class="line">NSError *jsonError;</span><br><span class="line">NSData *jsonData = [message dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line">NSDictionary *msgDict = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:&amp;jsonError];</span><br><span class="line">NSString *type = msgDict[@&quot;type&quot;];</span><br><span class="line">if ([type isEqualToString:@&quot;ping&quot;]) &#123;</span><br><span class="line">[self.socket send:@&quot;&#123;\&quot;type\&quot;:\&quot;pong\&quot;&#125;&quot;];</span><br><span class="line">[self outputString:@&quot;&#123;\&quot;type\&quot;:\&quot;pong\&quot;&#125;&quot; type:2] ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送数据给服务器,根据实际情况调用对应的方法即可,公司项目我和后台约定的是传json字符串所以调用的<code>sendString:error:</code>方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 发送数据</span><br><span class="line">- (void)send:(id)data;</span><br></pre></td></tr></table></figure></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://github.com/TongFangyuan/WebSocketDemo" target="_blank" rel="noopener">WebSocketDemo</a></p><p><a href="https://github.com/facebook/SocketRocket" target="_blank" rel="noopener">SRWebSocket</a></p><p><a href="http://tongfy.top/blog/2017/08/17/guan-yu-websocketshi-jian-ji-lu/" target="_blank" rel="noopener">阅读原文</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于公司有直播方面的业务,直播肯定需要弹幕功能,google了一番发现Websocket可以实现实时弹幕功能,然后在GitHub上发现了Facebook家的第三方框架SocketRocket,实现了弹幕功能.&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://tongfangyuan.github.io/categories/iOS/"/>
    
    
      <category term="WebSocket" scheme="https://tongfangyuan.github.io/tags/WebSocket/"/>
    
  </entry>
  
</feed>
